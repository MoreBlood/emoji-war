{"version":3,"sources":["serviceWorker.ts","helpers/math.ts","helpers/emojis.ts","types/pair.ts","stores/gameStore.ts","components/emoji/index.tsx","containers/game/index.tsx","containers/menu/index.tsx","containers/settings/index.tsx","containers/about/index.tsx","index.tsx","containers/gameOver/index.tsx"],"names":["Boolean","window","location","hostname","match","randomInteger","min","max","includingMax","arguments","length","undefined","rand","Math","random","round","yes","emoticons","skin","colorable","GameState","Pair","pair","Object","classCallCheck","this","originalPair","shuffle","createClass","key","value","shuffled","i","u","push","sort","counter","Array","isArray","skinModifier","includes","get","hash","store","_class","GameStore","initializerDefineProperty","_descriptor","_descriptor2","_descriptor3","_descriptor4","_descriptor5","_descriptor6","_descriptor7","_descriptor8","_descriptor9","_descriptor10","_descriptor11","timerUpdater","timer","scoredWrong","generate","_this","clearInterval","setInterval","decrease","LGBTFriendly","lifes","stop","first","second","gameSize","randomEmoji","randomRow","randomColoumn","firstPair","secondPair","skinColor","time","initTimer","gameState","playing","scoreWrong","scoreRight","gameLifes","restart","gameOver","vote","comparePairs","set","navigator","vibrate","applyDecoratedDescriptor","prototype","observable","configurable","enumerable","writable","initializer","computed","getOwnPropertyDescriptor","action","Emoji","props","react_default","a","createElement","className","concat","children","Game","withRouter","inject","observer","possibleConstructorReturn","getPrototypeOf","call","gameStore","gameStateChanges","voteForPairs","no","switch","switchGameMode","menu","history","over","_this2","autorun","setTimeout","_this$gameStore","gameSizeEmoji","style","display","onClick","TransitionGroup","CSSTransition","timeout","classNames","from","map","heart","index","opacity","rows","join","item","emoji","React","Component","Menu","start","settings","about","Settings","switchGameType","switchLGBTFriendly","goBack","textDecoration","About","stores","routes","path","GameOver","score","num","array","toString","split","res","forEach","el","getNumberEmoji","numberToEmojiString","router","mobx_react_module","react_router_dom","_ref","react_router","exact","_ref2","in","unmountOnExit","ReactDOM","render","document","getElementById","serviceWorker","ready","then","registration","unregister"],"mappings":"mYAYoBA,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MAAM,sKCjB5B,SAASC,EAAcC,EAAaC,GAA2C,IAA9BC,EAA8BC,UAAAC,OAAA,QAAAC,IAAAF,UAAA,IAAAA,UAAA,GAChFG,EAAON,EAAM,GAAMO,KAAKC,WAAaN,EAAeD,EAAMA,EAAM,GAAKD,EAAM,GAC/E,OAAOO,KAAKE,MAAMH,GAGb,SAASI,IACd,OAAOH,KAAKC,SAAW,GCNlB,IAAMG,EAAY,CACvB,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,gBAGWC,EAAO,CAAC,eAAM,eAAM,eAAM,eAAM,gBAEhCC,EAAY,CACvB,eACA,eACA,eACA,SACA,eACA,eACA,eACA,SACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,SACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,SACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA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","file":"static/js/main.b4f0a5b0.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/),\n);\n\ninterface Config {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n}\n\nfunction registerValidSW(swUrl: string, config?: Config): void {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration): void => {\n      registration.onupdatefound = (): void => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = (): void => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.',\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error): void => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config): void {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then((response): void => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (response.status === 404 || (contentType != null && contentType.indexOf('javascript') === -1)) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration): void => {\n          registration.unregister().then((): void => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch((): void => {\n      console.log('No internet connection found. App is running in offline mode.');\n    });\n}\n\nexport function register(config?: Config): void {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL((process as { env: { [key: string]: string } }).env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', (): void => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then((): void => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA',\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nexport function unregister(): void {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then((registration): void => {\n      registration.unregister();\n    });\n  }\n}\n","export function randomInteger(min: number, max: number, includingMax = false): number {\n  let rand = min - 0.5 + Math.random() * ((includingMax ? max : max - 1) - min + 1);\n  return Math.round(rand);\n}\n\nexport function yes(): boolean {\n  return Math.random() > 0.5;\n}\n","export const emoticons = [\n  '😀',\n  '😁',\n  '😂',\n  '😃',\n  '😄',\n  '😅',\n  '😆',\n  '😇',\n  '😈',\n  '😉',\n  '😊',\n  '😋',\n  '😌',\n  '😍',\n  '😎',\n  '😏',\n  '😐',\n  '😑',\n  '😒',\n  '😓',\n  '😔',\n  '😕',\n  '😖',\n  '😗',\n  '😘',\n  '😙',\n  '😚',\n  '😛',\n  '😜',\n  '😝',\n  '😞',\n  '😟',\n  '😠',\n  '😡',\n  '😢',\n  '😣',\n  '😤',\n  '😥',\n  '😦',\n  '😧',\n  '😨',\n  '😩',\n  '😪',\n  '😫',\n  '😬',\n  '😭',\n  '😮',\n  '😯',\n  '😰',\n  '😱',\n  '😲',\n  '😳',\n  '😴',\n  '😵',\n  '😶',\n  '😷',\n  '😸',\n  '😹',\n  '😺',\n  '😻',\n  '😼',\n  '😽',\n  '😾',\n  '😿',\n  '🙀',\n  '🙁',\n  '🙂',\n  '🙃',\n  '🙄',\n];\n\nexport const skin = ['🏻', '🏼', '🏽', '🏾', '🏿'];\n\nexport const colorable = [\n  '👋',\n  '🤚',\n  '🖐',\n  '✋',\n  '🖖',\n  '👌',\n  '🤏',\n  '✌',\n  '🤞',\n  '🤟',\n  '🤘',\n  '🤙',\n  '👈',\n  '👉',\n  '👆',\n  '🖕',\n  '👇',\n  '👍',\n  '👎',\n  '✊',\n  '👊',\n  '🤛',\n  '🤜',\n  '👏',\n  '🙌',\n  '👐',\n  '🤲',\n  '🙏',\n  '✍',\n  '💅',\n  '🤝',\n  '🤳',\n  '💪',\n  '🦵',\n  '🦶',\n  '👂',\n  '🦻',\n  '👃',\n  '👶',\n  '🧒',\n  '👦',\n  '👧',\n  '🧑',\n  '👱',\n  '👨',\n  '🧔',\n  '👩',\n  '🧓',\n  '👴',\n  '👵',\n  '🙍',\n  '🙎',\n  '🙅',\n  '🙆',\n  '💁',\n  '🙋',\n  '🧏',\n  '🙇',\n  '🤦',\n  '🤷',\n  '👮',\n  '🕵',\n  '💂',\n  '👷',\n  '🤴',\n  '👸',\n  '👳',\n  '👲',\n  '🧕',\n  '🤵',\n  '👰',\n  '🤰',\n  '🤱',\n  '👼',\n  '🎅',\n  '🤶',\n  '🦸',\n  '🦹',\n  '🧙',\n  '🧚',\n  '🧛',\n  '🧜',\n  '🧝',\n  '💆',\n  '💇',\n  '🚶',\n  '🧍',\n  '🧎',\n  '🏃',\n  '💃',\n  '🕺',\n  '🕴',\n  '👯',\n  '🧖',\n  '🧗',\n  '🏇',\n  '🏂',\n  '🏌',\n  '🏄',\n  '🚣',\n  '🏊',\n  '⛹',\n  '🏋',\n  '🚴',\n  '🚵',\n  '🤸',\n  '🤽',\n  '🤾',\n  '🤹',\n  '🧘',\n  '👭',\n  '👫',\n  '👬',\n  '💏',\n  '💑',\n  '👪',\n  '🤼',\n];\n\nfunction getNumberEmoji(num: number): string {\n  switch (num) {\n    case 1:\n      return '1️⃣';\n      break;\n    case 2:\n      return '2️⃣';\n      break;\n    case 3:\n      return '3️⃣';\n      break;\n    case 4:\n      return '4️⃣';\n      break;\n    case 5:\n      return '5️⃣';\n      break;\n    case 6:\n      return '6️⃣';\n      break;\n    case 7:\n      return '7️⃣';\n      break;\n    case 8:\n      return '8️⃣';\n      break;\n    case 9:\n      return '9️⃣';\n      break;\n    case 0:\n      return '0️⃣';\n      break;\n    default:\n      return '';\n  }\n}\n\nexport function numberToEmojiString(num: number): string[] {\n  const array = num.toString().split('');\n  const res: string[] = [];\n\n  array.forEach(el => {\n    res.push(getNumberEmoji(+el));\n  });\n\n  return res;\n}\n","import { skin, colorable } from '../helpers/emojis';\nimport { randomInteger } from '../helpers/math';\n\nexport class Pair {\n  private originalPair: string[][] = [];\n  public pair: string[][] = [];\n\n  public constructor(pair: string[][] = []) {\n    this.originalPair = pair;\n    this.shuffle();\n  }\n\n  public get hash(): string {\n    let hash = '';\n\n    for (let i = 0; i < this.originalPair.length; i += 1) {\n      for (let u = 0; u < this.originalPair[i].length; u += 1) {\n        hash += this.originalPair[i][u];\n      }\n    }\n\n    return hash;\n  }\n\n  private shuffle(): void {\n    const shuffled = [];\n    for (let i = 0; i < this.originalPair.length; i += 1) {\n      for (let u = 0; u < this.originalPair[i].length; u += 1) {\n        shuffled.push(this.originalPair[i][u]);\n      }\n    }\n\n    shuffled.sort(() => Math.random() - 0.5);\n    let counter = 0;\n\n    for (let i = 0; i < this.originalPair.length; i += 1) {\n      if (!Array.isArray(this.pair[i])) {\n        this.pair[i] = [];\n      }\n      for (let u = 0; u < this.originalPair[i].length; u += 1) {\n        const skinModifier = colorable.includes(shuffled[counter]) ? skin[randomInteger(0, skin.length)] : '';\n        this.pair[i][u] = shuffled[counter] + skinModifier;\n        counter += 1;\n      }\n    }\n  }\n}\n","import { observable, action, computed, toJS } from 'mobx';\nimport { randomInteger, yes } from '../helpers/math';\nimport { emoticons, skin, colorable } from '../helpers/emojis';\nimport { Pair } from '../types/pair';\n\nexport enum GameState {\n  gameOver,\n  pause,\n  playing,\n}\n\nexport class GameStore {\n  @observable\n  public gameSize = 2;\n\n  @observable\n  public gameState: GameState = GameState.playing;\n\n  @observable\n  public gameLifes = 3;\n\n  @computed\n  private get time(): number {\n    return 2 * this.gameSize;\n  }\n\n  @observable\n  public lifes: number = this.gameLifes;\n\n  @observable\n  public LGBTFriendly = true;\n\n  @computed\n  public get gameSizeEmoji(): string {\n    switch (this.gameSize) {\n      case 2:\n        return '2️⃣';\n      case 3:\n        return '3️⃣';\n      default:\n        return '';\n    }\n  }\n\n  @observable\n  public firstPair: Pair = new Pair();\n\n  @observable\n  public secondPair: Pair = new Pair();\n\n  @observable\n  public scoreRight: number = 0;\n\n  @observable\n  public scoreWrong: number = 0;\n\n  @observable\n  public timer: number = this.time;\n\n  @observable\n  public skinColor: number = 0;\n\n  private timerUpdater: NodeJS.Timeout = null;\n\n  @action\n  private decrease(): void {\n    this.timer -= 1;\n    if (this.timer < 0) {\n      this.scoredWrong = 1;\n      this.generate();\n    }\n  }\n\n  private initTimer(): void {\n    if (this.timerUpdater) {\n      clearInterval(this.timerUpdater);\n    }\n    this.timerUpdater = setInterval(() => this.decrease(), 1000);\n  }\n\n  public switchLGBTFriendly(): void {\n    this.LGBTFriendly = !this.LGBTFriendly;\n  }\n\n  @action\n  private generate(): void {\n    if (this.lifes === 0) {\n      return this.stop();\n    }\n    const first: string[][] = [];\n    const second: string[][] = [];\n    for (let i = 0; i < this.gameSize; i += 1) {\n      if (!Array.isArray(first[i])) {\n        first[i] = [];\n        second[i] = [];\n      }\n      for (let u = 0; u < this.gameSize; u += 1) {\n        first[i][u] = GameStore.randomEmoji();\n        second[i][u] = first[i][u];\n      }\n    }\n\n    if (yes()) {\n      const randomRow = randomInteger(0, this.gameSize);\n      const randomColoumn = randomInteger(0, this.gameSize);\n\n      second[randomRow][randomColoumn] = GameStore.randomEmoji();\n    }\n\n    this.firstPair = new Pair(first);\n    this.secondPair = new Pair(second);\n    this.skinColor = randomInteger(0, skin.length);\n    this.timer = this.time;\n    this.initTimer();\n    this.gameState = GameState.playing;\n  }\n\n  public restart(): void {\n    this.scoreWrong = 0;\n    this.scoreRight = 0;\n    this.lifes = this.gameLifes;\n    this.generate();\n  }\n\n  public switchGameMode(): void {\n    if (this.gameSize === 2) {\n      this.gameSize = 3;\n    } else {\n      this.gameSize = 2;\n    }\n    this.restart();\n  }\n\n  private stop(): void {\n    if (this.timerUpdater) {\n      clearInterval(this.timerUpdater);\n      this.timer = 0;\n    }\n    this.gameState = GameState.gameOver;\n  }\n\n  public static randomEmoji(): string {\n    if (yes()) {\n      return colorable[randomInteger(0, colorable.length)];\n    } else {\n      return emoticons[randomInteger(0, emoticons.length)];\n    }\n  }\n\n  private set scoredWrong(value: number) {\n    if (window.navigator && window.navigator.vibrate) {\n      window.navigator.vibrate(200);\n    }\n\n    if (this.lifes > 0) {\n      this.lifes -= value;\n    }\n  }\n\n  @action\n  public voteForPairs(vote: boolean): void {\n    if (this.comparePairs === vote) {\n      this.scoreRight += this.gameSize;\n    } else {\n      this.scoredWrong = 1;\n    }\n    this.generate();\n  }\n\n  @computed\n  public get comparePairs(): boolean {\n    return this.firstPair.hash === this.secondPair.hash;\n  }\n}\n\nexport const store = new GameStore();\n","import React from 'react';\nimport './styles.scss';\n\ninterface Props {\n  emoji?: string;\n  gameSize?: number;\n}\n\nconst Emoji: React.FC<Props> = props => {\n  return <div className={`${props.gameSize === 3 ? 'three' : ''} emoji__holder`}>{props.children}</div>;\n};\n\nexport default Emoji;\n","import React from 'react';\nimport { Swipeable, EventData } from 'react-swipeable';\nimport { inject, observer } from 'mobx-react';\nimport { withRouter, RouteComponentProps } from 'react-router-dom';\nimport { CSSTransition, TransitionGroup, SwitchTransition } from 'react-transition-group';\n\nimport './styles.scss';\nimport '../../styles/global.scss';\nimport '../../styles/adaptive.scss';\n\nimport { GameStore, GameState } from '../../stores/gameStore';\nimport Emoji from '../../components/emoji';\nimport { randomInteger } from '../../helpers/math';\nimport { skin } from '../../helpers/emojis';\nimport { autorun, IReactionDisposer } from 'mobx';\n\ntype PropsType = RouteComponentProps<{}> & {\n  gameStore?: GameStore;\n};\n\n@(withRouter as any)\n@inject('gameStore')\n@observer\nclass Game extends React.Component<PropsType, null> {\n  private gameStore: GameStore;\n  private gameStateChanges: IReactionDisposer;\n\n  public constructor(props: PropsType) {\n    super(props);\n\n    this.gameStore = this.props.gameStore;\n  }\n\n  public componentWillMount(): void {\n    this.gameStore.restart();\n\n    this.gameStateChanges = autorun(() => {\n      const { gameState } = this.gameStore;\n      switch (gameState) {\n        case GameState.gameOver:\n          setTimeout(() => this.over(), 1000);\n          break;\n        default:\n          break;\n      }\n    });\n  }\n\n  public componentWillUnmount(): void {\n    this.gameStateChanges();\n  }\n\n  private yes = (): void => this.gameStore.voteForPairs(true);\n  private no = (): void => this.gameStore.voteForPairs(false);\n  private switch = (): void => this.gameStore.switchGameMode();\n  private menu = (): void => this.props.history.push('');\n  private over = (): void => this.props.history.push('/gameOver');\n  private restart = (): void => this.gameStore.restart();\n\n  public render(): React.ReactNode {\n    const {\n      firstPair,\n      secondPair,\n      timer,\n      scoreRight,\n      scoreWrong,\n      gameSizeEmoji,\n      gameLifes,\n      gameSize,\n      skinColor,\n      lifes,\n    } = this.gameStore;\n    return (\n      <div className=\"App\">\n        <div className=\"gameField\">\n          {/* <div className=\"blured score debug\">\n            {firstPair.hash}\n            {comparePairs ? ' = ' : ' != '}\n            {secondPair.hash}\n          </div> */}\n          <div className=\"topBar\" style={{ display: 'flex' }}>\n            <div className=\"score-holder timer\">\n              <div className=\"blured score\">\n                <button className=\"thumb switch\" onClick={this.menu}>\n                  ⏪\n                </button>\n              </div>\n            </div>\n            <TransitionGroup className=\"score-holder scale\">\n              <CSSTransition key={scoreRight} timeout={500} classNames=\"scale\">\n                <div className=\"blured score\">{`🔥 ${scoreRight}`}</div>\n              </CSSTransition>\n            </TransitionGroup>\n            <TransitionGroup className=\"score-holder scale timer\">\n              <CSSTransition key={timer} timeout={500} classNames=\"scale\">\n                <div className=\"blured score\">{timer}</div>\n              </CSSTransition>\n            </TransitionGroup>\n            <div className=\"score-holder lifes scale\">\n              <div className=\"blured score\">\n                {Array.from({ length: gameLifes }, () => '❤️').map((heart, index) => (\n                  <span key={index} className=\"life\" style={{ opacity: index < lifes ? 1 : 0.1 }}>\n                    {heart}\n                  </span>\n                ))}\n              </div>\n            </div>\n            <div className=\"score-holder timer\">\n              <div className=\"blured score\">\n                <button className=\"thumb switch\" onClick={this.restart}>\n                  🔄\n                </button>\n              </div>\n            </div>\n          </div>\n          <div className=\"pairs blured\">\n            {[firstPair, secondPair].map((pair, index) => {\n              return (\n                <TransitionGroup key={`${index}`} className=\"pair-holder scale\">\n                  <CSSTransition key={pair.hash} timeout={500} classNames=\"scale\">\n                    <div className=\"pair\">\n                      {pair.pair.map(rows => {\n                        return (\n                          <div className=\"emoji-row\" key={rows.join()}>\n                            {rows.map(item => (\n                              <div key={item}>\n                                <Emoji gameSize={gameSize}>{item}</Emoji>\n                              </div>\n                            ))}\n                          </div>\n                        );\n                      })}\n                    </div>\n                  </CSSTransition>\n                </TransitionGroup>\n              );\n            })}\n          </div>\n          <div className=\"blured buttons\">\n            <button className=\"thumb down\" onClick={this.yes}>\n              <Emoji>{`👍${skin[skinColor]}`}</Emoji>\n            </button>\n            <button className=\"thumb up\" onClick={this.no}>\n              <Emoji>{`👎${skin[skinColor]}`}</Emoji>\n            </button>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Game as React.ComponentType<any>;\n","import React from 'react';\nimport { Swipeable, EventData } from 'react-swipeable';\nimport { inject, observer } from 'mobx-react';\nimport { withRouter, RouteComponentProps } from 'react-router-dom';\nimport { CSSTransition, TransitionGroup, SwitchTransition } from 'react-transition-group';\n\nimport './styles.scss';\nimport '../../styles/global.scss';\nimport '../../styles/adaptive.scss';\n\nimport { GameStore } from '../../stores/gameStore';\nimport Emoji from '../../components/emoji';\nimport { randomInteger } from '../../helpers/math';\nimport { skin, emoticons } from '../../helpers/emojis';\n\ntype PropsType = RouteComponentProps<{}> & {\n  gameStore?: GameStore;\n};\n\n@(withRouter as any)\n@inject('gameStore')\n@observer\nclass Menu extends React.Component<PropsType> {\n  private gameStore: GameStore;\n  private emoji = emoticons[randomInteger(0, emoticons.length)];\n\n  public constructor(props: PropsType) {\n    super(props);\n\n    this.gameStore = this.props.gameStore;\n  }\n\n  public componentWillMount(): void {}\n\n  public componentWillUnmount(): void {}\n\n  private start = (): void => this.props.history.push('game');\n  private settings = (): void => this.props.history.push('settings');\n  private about = (): void => this.props.history.push('about');\n\n  public render(): React.ReactNode {\n    const { LGBTFriendly } = this.gameStore;\n    return (\n      <div className=\"menu\">\n        <div className=\"logo\">{LGBTFriendly ? this.emoji : '😔'}</div>\n        <div className=\"all-buttons\">\n          <div className=\"buttons\">\n            <button className=\"button play blured\" onClick={this.start}>\n              ▶️\n            </button>\n          </div>\n          <div className=\"buttons\">\n            <button className=\"button small blured\" onClick={this.about}>\n              🤔\n            </button>\n            <button className=\"button small blured\" onClick={this.settings}>\n              ⚙️\n            </button>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Menu as React.ComponentType<any>;\n","import React from 'react';\nimport { inject, observer } from 'mobx-react';\nimport { withRouter, RouteComponentProps } from 'react-router-dom';\n\nimport './styles.scss';\nimport '../../styles/global.scss';\nimport '../../styles/adaptive.scss';\n\nimport { GameStore } from '../../stores/gameStore';\n\ntype PropsType = RouteComponentProps<{}> & {\n  gameStore?: GameStore;\n};\n\n@(withRouter as any)\n@inject('gameStore')\n@observer\nclass Settings extends React.Component<PropsType> {\n  private gameStore: GameStore;\n\n  public constructor(props?: PropsType) {\n    super(props);\n\n    this.gameStore = this.props.gameStore;\n  }\n\n  public componentWillMount(): void {}\n\n  public componentWillUnmount(): void {}\n\n  private start = (): void => this.props.history.push('game');\n  private switchGameType = (): void => this.gameStore.switchGameMode();\n  private switchLGBTFriendly = (): void => this.gameStore.switchLGBTFriendly();\n  private menu = (): void => this.props.history.goBack();\n\n  public render(): React.ReactNode {\n    const { gameSizeEmoji, LGBTFriendly } = this.gameStore;\n    return (\n      <div className=\"settings\">\n        <div className=\"logo\">⚙️</div>\n        <div className=\"all-buttons\">\n          <button className=\"button small blured\" onClick={this.switchGameType}>\n            {gameSizeEmoji} <span className=\"setting-item-text\">Game size</span>\n          </button>\n          <button className=\"button small blured\" onClick={this.switchLGBTFriendly}>\n            🏳️‍🌈{' '}\n            <span style={{ textDecoration: !LGBTFriendly ? 'line-through' : 'none' }} className=\"setting-item-text\">\n              LGBT Friendly\n            </span>\n          </button>\n          <div className=\"buttons\">\n            <button className=\"button back blured\" onClick={this.menu}>\n              ⏪\n            </button>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Settings;\n","import React from 'react';\nimport { Swipeable, EventData } from 'react-swipeable';\nimport { inject, observer } from 'mobx-react';\nimport { withRouter, RouteComponentProps } from 'react-router-dom';\nimport { CSSTransition, TransitionGroup, SwitchTransition } from 'react-transition-group';\n\nimport './styles.scss';\nimport '../../styles/global.scss';\nimport '../../styles/adaptive.scss';\n\nimport { GameStore } from '../../stores/gameStore';\nimport Emoji from '../../components/emoji';\nimport { randomInteger } from '../../helpers/math';\nimport { skin } from '../../helpers/emojis';\n\ntype PropsType = RouteComponentProps<{}>;\n\n@(withRouter as any)\n@observer\nclass About extends React.Component<PropsType> {\n  public constructor(props?: PropsType) {\n    super(props);\n  }\n\n  public componentWillMount(): void {}\n\n  public componentWillUnmount(): void {}\n\n  private start = (): void => this.props.history.push('game');\n  private menu = (): void => this.props.history.goBack();\n\n  public render(): React.ReactNode {\n    return (\n      <div className=\"about\">\n        <div className=\"logo\">🤔</div>\n        <div className=\"thanks blured\">\n          I’ve made this for fun. <br />\n          <big>Big</big> thanks to my friends for great advises and testing this little game <br />\n          <big className=\"heart\">❤️</big>\n        </div>\n        <div className=\"all-buttons\">\n          <div className=\"buttons\">\n            <button className=\"button back blured\" onClick={this.menu}>\n              ⏪\n            </button>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default About;\n","/* eslint-disable @typescript-eslint/explicit-function-return-type */\nimport React from 'react';\nimport { Provider } from 'mobx-react';\nimport ReactDOM from 'react-dom';\nimport { Route, Switch, Redirect, HashRouter } from 'react-router-dom';\nimport './index.css';\nimport * as serviceWorker from './serviceWorker';\nimport Game from './containers/game';\nimport { store as gameStore } from './stores/gameStore';\nimport Menu from './containers/menu';\nimport Settings from './containers/settings';\nimport About from './containers/about';\nimport GameOver from './containers/gameOver';\nimport { CSSTransition } from 'react-transition-group';\n\nconst stores = {\n  gameStore,\n};\n\nconst routes = [\n  { path: '/about', Component: About },\n  { path: '/', Component: Menu },\n  { path: '/game', Component: Game },\n  { path: '/settings', Component: Settings },\n  { path: '/gameOver', Component: GameOver },\n];\n\nconst router = (\n  <Provider {...stores}>\n    <HashRouter>\n      {routes.map(({ path, Component }) => (\n        <Route key={path} exact path={path}>\n          {({ match }: { match: any }) => (\n            <CSSTransition in={match != null} timeout={300} classNames=\"page\" unmountOnExit>\n              <div className=\"page\">\n                <Component />\n              </div>\n            </CSSTransition>\n          )}\n        </Route>\n      ))}\n    </HashRouter>\n  </Provider>\n);\n\nReactDOM.render(router, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n\n// function listener(): void {\n//   switch (screen.orientation.type) {\n//     case 'landscape-primary':\n//       window.document.documentElement.requestFullscreen();\n//       break;\n//     default: {\n//       if (window.document.fullscreen) {\n//         window.document.exitFullscreen();\n//       }\n//     }\n//   }\n// }\n\n// if (window.screen && window.screen.orientation) {\n//   window.screen.orientation.addEventListener('change', listener, false);\n// }\n","import React from 'react';\nimport { Swipeable, EventData } from 'react-swipeable';\nimport { inject, observer } from 'mobx-react';\nimport { withRouter, RouteComponentProps } from 'react-router-dom';\nimport { CSSTransition, TransitionGroup, SwitchTransition } from 'react-transition-group';\n\nimport './styles.scss';\nimport '../../styles/global.scss';\nimport '../../styles/adaptive.scss';\n\nimport { GameStore } from '../../stores/gameStore';\nimport Emoji from '../../components/emoji';\nimport { randomInteger } from '../../helpers/math';\nimport { skin, numberToEmojiString, emoticons } from '../../helpers/emojis';\n\ntype PropsType = RouteComponentProps<{}> & {\n  gameStore?: GameStore;\n};\n\n@(withRouter as any)\n@inject('gameStore')\nclass GameOver extends React.Component<PropsType> {\n  private gameStore: GameStore;\n  private score = 0;\n  private emoji = emoticons[randomInteger(0, emoticons.length)];\n\n  public constructor(props: PropsType) {\n    super(props);\n\n    this.gameStore = this.props.gameStore;\n    this.score = this.gameStore.scoreRight;\n  }\n\n  public componentWillMount(): void {}\n\n  public componentWillUnmount(): void {}\n\n  private start = (): void => this.props.history.push('/game');\n  private menu = (): void => this.props.history.push('/');\n  private settings = (): void => this.props.history.push('/settings');\n\n  public render(): React.ReactNode {\n    return (\n      <div className=\"gameOver\">\n        <div className=\"logo\">{this.emoji}</div>\n        <button className=\"thanks\">{numberToEmojiString(this.score)}</button>\n        <div className=\"all-buttons\">\n          <div className=\"buttons\">\n            <button className=\"button play blured\" onClick={this.start}>\n              🔄\n            </button>\n          </div>\n          <div className=\"buttons\">\n            <button className=\"button small blured\" onClick={this.menu}>\n              🏠\n            </button>\n            <button className=\"button small blured\" onClick={this.settings}>\n              ⚙️\n            </button>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default GameOver as React.ComponentType<any>;\n"],"sourceRoot":""}