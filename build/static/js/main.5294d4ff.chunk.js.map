{"version":3,"sources":["serviceWorker.ts","helpers/math.ts","helpers/emojis.ts","types/pair.ts","stores/gameStore.ts","helpers/localStorage.ts","containers/game/index.tsx","components/emoji/index.tsx","containers/menu/index.tsx","containers/settings/index.tsx","containers/about/index.tsx","index.tsx","containers/gameOver/index.tsx"],"names":["Boolean","window","location","hostname","match","randomInteger","min","max","includingMax","arguments","length","undefined","rand","Math","random","round","yes","sadEmoticons","happyEmoticons","emoticons","Array","from","Set","concat","values","sort","skin","colorable","numberToEmojiString","num","array","toString","split","res","forEach","el","push","GameState","Pair","pair","Object","classCallCheck","this","originalPair","shuffle","createClass","key","value","shuffled","i","u","counter","isArray","skinModifier","includes","get","hash","SavedSettingProperty","_temp","_class2","name","defaultValue","type","initializerDefineProperty","_descriptor","appPrefix","localStorage","getItem","item","_value","JSON","parse","err","console","error","set","setItem","stringify","_class","applyDecoratedDescriptor","prototype","observable","configurable","enumerable","writable","initializer","computed","getOwnPropertyDescriptor","Direction","store","gameStore_class","GameStore","gameSizes","_gameSize","gameStore_descriptor","_descriptor2","_descriptor3","_LGBTFriendly","_swipesDisabled","_highScore","_descriptor4","_descriptor5","_descriptor6","_descriptor7","_descriptor8","_descriptor9","timerUpdater","timer","scoredWrong","generate","_this","clearInterval","setInterval","decrease","LGBTFriendly","swipesDisabled","lifes","stop","first","second","gameSize","randomEmoji","randomRow","randomColoumn","firstPair","secondPair","skinColor","time","initTimer","gameState","playing","scoreWrong","scoreRight","gameLifes","currentGameSizeIndex","indexOf","nextGameSize","log","restart","gameOver","randomEmoticon","vote","comparePairs","highScore","join","emojis","navigator","vibrate","action","getClass","size","Emoji","props","react_default","a","createElement","className","children","Game","withRouter","inject","observer","possibleConstructorReturn","getPrototypeOf","call","gameStore","gameStateChanges","pairs","React","createRef","game_descriptor","assertThisInitialized","game_descriptor2","game_descriptor3","game_descriptor4","startedAnimating","isAnimating","stopeAnimating","onSwipe","e","_this$gameStore","isPlaying","current","style","transition","isSwiping","offsetX","deltaX","offsetY","deltaY","screenWidth","innerWidth","maxRotation","maxColor","abs","background","transform","onSwiped","resetPairsPosition","sign","no","setTimeout","voteForPairs","switch","switchGameMode","menu","history","over","_this2","autorun","_this3","_this$gameStore2","es","onSwiping","display","disabled","onClick","TransitionGroup","CSSTransition","timeout","classNames","map","heart","index","opacity","ref","unmountOnExit","onEnter","onExited","rows","emoji","Component","Menu","randomSadOrHappyEmoticon","start","settings","about","Settings","switchGameType","switchLGBTFriendly","switchSwipesDisabled","goBack","gameSizeEmoji","textDecoration","About","stores","routes","path","GameOver","score","isTop","visibility","router","mobx_react_module","react_router_dom","_ref","react_router","exact","_ref2","in","ReactDOM","render","document","getElementById","serviceWorker","ready","then","registration","unregister"],"mappings":"mYAYoBA,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MAAM,sLCjB5B,SAASC,EAAcC,EAAaC,GAA2C,IAA9BC,EAA8BC,UAAAC,OAAA,QAAAC,IAAAF,UAAA,IAAAA,UAAA,GAChFG,EAAON,EAAM,GAAMO,KAAKC,WAAaN,EAAeD,EAAMA,EAAM,GAAKD,EAAM,GAC/E,OAAOO,KAAKE,MAAMH,GAGb,SAASI,IACd,OAAOH,KAAKC,SAAW,GCNlB,IAAMG,EAAe,CAC1B,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,gBAEWC,EAAiB,CAC5B,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,gBAGWC,EAAYC,MAAMC,KAAK,IAAIC,IAAJ,GAAAC,OAAYN,EAAiBC,IAAiBM,UAAUC,KAC1F,kBAAMZ,KAAKC,SAAW,KAGXY,EAAO,CAAC,eAAM,eAAM,eAAM,eAAM,gBAEhCC,EAAY,CACvB,eACA,eACA,eACA,SACA,eACA,eACA,eACA,SACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,SACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,SACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,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","file":"static/js/main.5294d4ff.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/),\r\n);\r\n\r\ninterface Config {\r\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\r\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\r\n}\r\n\r\nfunction registerValidSW(swUrl: string, config?: Config): void {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then((registration): void => {\r\n      registration.onupdatefound = (): void => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = (): void => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.',\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch((error): void => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl: string, config?: Config): void {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then((response): void => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (response.status === 404 || (contentType != null && contentType.indexOf('javascript') === -1)) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then((registration): void => {\r\n          registration.unregister().then((): void => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch((): void => {\r\n      console.log('No internet connection found. App is running in offline mode.');\r\n    });\r\n}\r\n\r\nexport function register(config?: Config): void {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL((process as { env: { [key: string]: string } }).env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', (): void => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then((): void => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA',\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nexport function unregister(): void {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then((registration): void => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","export function randomInteger(min: number, max: number, includingMax = false): number {\r\n  let rand = min - 0.5 + Math.random() * ((includingMax ? max : max - 1) - min + 1);\r\n  return Math.round(rand);\r\n}\r\n\r\nexport function yes(): boolean {\r\n  return Math.random() > 0.5;\r\n}\r\n","export const sadEmoticons = [\r\n  '😑',\r\n  '😒',\r\n  '😓',\r\n  '😔',\r\n  '😕',\r\n  '😖',\r\n  '😞',\r\n  '😟',\r\n  '😠',\r\n  '😡',\r\n  '😢',\r\n  '😣',\r\n  '😤',\r\n  '😥',\r\n  '😦',\r\n  '😧',\r\n  '😨',\r\n  '😩',\r\n  '😪',\r\n  '😫',\r\n  '😭',\r\n  '😯',\r\n  '😰',\r\n  '😳',\r\n  '😵',\r\n  '😶',\r\n  '😷',\r\n  '😾',\r\n  '😿',\r\n  '🙁',\r\n  '🙃',\r\n  '🙄',\r\n];\r\nexport const happyEmoticons = [\r\n  '😀',\r\n  '😁',\r\n  '😂',\r\n  '😃',\r\n  '😄',\r\n  '😅',\r\n  '😆',\r\n  '😇',\r\n  '😈',\r\n  '😉',\r\n  '😊',\r\n  '😋',\r\n  '😌',\r\n  '😍',\r\n  '😎',\r\n  '😏',\r\n  '😐',\r\n  '😗',\r\n  '😘',\r\n  '😙',\r\n  '😚',\r\n  '😛',\r\n  '😜',\r\n  '😝',\r\n  '😱',\r\n  '😲',\r\n  '😳',\r\n  '😴',\r\n  '😸',\r\n  '😹',\r\n  '😺',\r\n  '😻',\r\n  '😼',\r\n  '😽',\r\n  '🙀',\r\n  '🙂',\r\n];\r\n\r\nexport const emoticons = Array.from(new Set([...sadEmoticons, ...happyEmoticons]).values()).sort(\r\n  () => Math.random() - 0.5,\r\n);\r\n\r\nexport const skin = ['🏻', '🏼', '🏽', '🏾', '🏿'];\r\n\r\nexport const colorable = [\r\n  '👋',\r\n  '🤚',\r\n  '🖐',\r\n  '✋',\r\n  '🖖',\r\n  '👌',\r\n  '🤏',\r\n  '✌',\r\n  '🤞',\r\n  '🤟',\r\n  '🤘',\r\n  '🤙',\r\n  '👈',\r\n  '👉',\r\n  '👆',\r\n  '🖕',\r\n  '👇',\r\n  '👍',\r\n  '👎',\r\n  '✊',\r\n  '👊',\r\n  '🤛',\r\n  '🤜',\r\n  '👏',\r\n  '🙌',\r\n  '👐',\r\n  '🤲',\r\n  '🙏',\r\n  '✍',\r\n  '💅',\r\n  '🤝',\r\n  '🤳',\r\n  '💪',\r\n  '🦵',\r\n  '🦶',\r\n  '👂',\r\n  '🦻',\r\n  '👃',\r\n  '👶',\r\n  '🧒',\r\n  '👦',\r\n  '👧',\r\n  '🧑',\r\n  '👱',\r\n  '👨',\r\n  '🧔',\r\n  '👩',\r\n  '🧓',\r\n  '👴',\r\n  '👵',\r\n  '🙍',\r\n  '🙎',\r\n  '🙅',\r\n  '🙆',\r\n  '💁',\r\n  '🙋',\r\n  '🧏',\r\n  '🙇',\r\n  '🤦',\r\n  '🤷',\r\n  '👮',\r\n  '🕵',\r\n  '💂',\r\n  '👷',\r\n  '🤴',\r\n  '👸',\r\n  '👳',\r\n  '👲',\r\n  '🧕',\r\n  '🤵',\r\n  '👰',\r\n  '🤰',\r\n  '🤱',\r\n  '👼',\r\n  '🎅',\r\n  '🤶',\r\n  '🦸',\r\n  '🦹',\r\n  '🧙',\r\n  '🧚',\r\n  '🧛',\r\n  '🧜',\r\n  '🧝',\r\n  '💆',\r\n  '💇',\r\n  '🚶',\r\n  '🧍',\r\n  '🧎',\r\n  '🏃',\r\n  '💃',\r\n  '🕺',\r\n  '🕴',\r\n  '👯',\r\n  '🧖',\r\n  '🧗',\r\n  '🏇',\r\n  '🏂',\r\n  '🏌',\r\n  '🏄',\r\n  '🚣',\r\n  '🏊',\r\n  '⛹',\r\n  '🏋',\r\n  '🚴',\r\n  '🚵',\r\n  '🤸',\r\n  '🤽',\r\n  '🤾',\r\n  '🤹',\r\n  '🧘',\r\n  // '👭',\r\n  // '👫',\r\n  // '👬',\r\n  '💏',\r\n  '💑',\r\n  '👪',\r\n  '🤼',\r\n];\r\n\r\nfunction getNumberEmoji(num: number): string {\r\n  const numbers = ['0️⃣', '1️⃣', '2️⃣', '3️⃣', '4️⃣', '5️⃣', '6️⃣', '7️⃣', '8️⃣', '9️⃣'];\r\n  return numbers[num];\r\n}\r\n\r\nexport function numberToEmojiString(num: number): string[] {\r\n  const array = num.toString().split('');\r\n  const res: string[] = [];\r\n\r\n  array.forEach(el => {\r\n    res.push(getNumberEmoji(+el));\r\n  });\r\n\r\n  return res;\r\n}\r\n","import { skin, colorable } from '../helpers/emojis';\r\nimport { randomInteger } from '../helpers/math';\r\n\r\nexport class Pair {\r\n  private originalPair: string[][] = [];\r\n  public pair: string[][] = [];\r\n\r\n  public constructor(pair: string[][] = []) {\r\n    this.originalPair = pair;\r\n    this.shuffle();\r\n  }\r\n\r\n  public get hash(): string {\r\n    let hash = '';\r\n\r\n    for (let i = 0; i < this.originalPair.length; i += 1) {\r\n      for (let u = 0; u < this.originalPair[i].length; u += 1) {\r\n        hash += this.originalPair[i][u];\r\n      }\r\n    }\r\n\r\n    return hash;\r\n  }\r\n\r\n  private shuffle(): void {\r\n    const shuffled = [];\r\n    for (let i = 0; i < this.originalPair.length; i += 1) {\r\n      for (let u = 0; u < this.originalPair[i].length; u += 1) {\r\n        shuffled.push(this.originalPair[i][u]);\r\n      }\r\n    }\r\n\r\n    shuffled.sort(() => Math.random() - 0.5);\r\n    let counter = 0;\r\n\r\n    for (let i = 0; i < this.originalPair.length; i += 1) {\r\n      if (!Array.isArray(this.pair[i])) {\r\n        this.pair[i] = [];\r\n      }\r\n      for (let u = 0; u < this.originalPair[i].length; u += 1) {\r\n        const skinModifier = colorable.includes(shuffled[counter]) ? skin[randomInteger(0, skin.length)] : '';\r\n        this.pair[i][u] = shuffled[counter] + skinModifier;\r\n        counter += 1;\r\n      }\r\n    }\r\n  }\r\n}\r\n","import { observable, action, computed, toJS } from 'mobx';\r\nimport { randomInteger, yes } from '../helpers/math';\r\nimport { emoticons, skin, colorable, sadEmoticons, happyEmoticons, numberToEmojiString } from '../helpers/emojis';\r\nimport { Pair } from '../types/pair';\r\nimport { SavedSettingProperty } from '../helpers/localStorage';\r\n\r\nexport enum GameState {\r\n  gameOver,\r\n  pause,\r\n  playing,\r\n}\r\n\r\nexport class GameStore {\r\n  private gameSizes = [2, 3, 4];\r\n  private _gameSize = new SavedSettingProperty('gameSize', 2, 'number');\r\n\r\n  @computed\r\n  public get gameSize(): number {\r\n    const { value } = this._gameSize;\r\n    return value as number;\r\n  }\r\n\r\n  public set gameSize(value: number) {\r\n    this._gameSize.value = value;\r\n  }\r\n\r\n  @observable\r\n  public gameState: GameState = GameState.playing;\r\n\r\n  @observable\r\n  public gameLifes = 3;\r\n\r\n  @computed\r\n  private get time(): number {\r\n    return 2 * this.gameSize + 1;\r\n  }\r\n\r\n  @observable\r\n  public lifes: number = this.gameLifes;\r\n\r\n  private _LGBTFriendly = new SavedSettingProperty('LGBTFriendly', true, 'bool');\r\n\r\n  @computed\r\n  public get LGBTFriendly(): boolean {\r\n    const { value } = this._LGBTFriendly;\r\n    return value as boolean;\r\n  }\r\n\r\n  public set LGBTFriendly(value: boolean) {\r\n    this._LGBTFriendly.value = value;\r\n  }\r\n\r\n  private _swipesDisabled = new SavedSettingProperty('swipesDisabled', false, 'bool');\r\n\r\n  @computed\r\n  public get swipesDisabled(): boolean {\r\n    const { value } = this._swipesDisabled;\r\n    return value as boolean;\r\n  }\r\n\r\n  public set swipesDisabled(value: boolean) {\r\n    this._swipesDisabled.value = value;\r\n  }\r\n\r\n  private _highScore = new SavedSettingProperty('highScore', 0, 'number');\r\n\r\n  @computed\r\n  public get highScore(): number {\r\n    const { value } = this._highScore;\r\n    return value as number;\r\n  }\r\n\r\n  public set highScore(value: number) {\r\n    if (value > this._highScore.value) {\r\n      this._highScore.value = value;\r\n    }\r\n  }\r\n\r\n  @computed\r\n  public get gameSizeEmoji(): string {\r\n    return numberToEmojiString(this.gameSize).join('');\r\n  }\r\n\r\n  @observable\r\n  public firstPair: Pair = new Pair();\r\n\r\n  @observable\r\n  public secondPair: Pair = new Pair();\r\n\r\n  @observable\r\n  public scoreRight: number = 0;\r\n\r\n  @observable\r\n  public scoreWrong: number = 0;\r\n\r\n  @observable\r\n  public timer: number = this.time;\r\n\r\n  @observable\r\n  public skinColor: number = 0;\r\n\r\n  private timerUpdater: NodeJS.Timeout = null;\r\n\r\n  @action\r\n  private decrease(): void {\r\n    this.timer -= 1;\r\n    if (this.timer < 0) {\r\n      this.scoredWrong = 1;\r\n      this.generate();\r\n    }\r\n  }\r\n\r\n  private initTimer(): void {\r\n    if (this.timerUpdater) {\r\n      clearInterval(this.timerUpdater);\r\n    }\r\n    this.timerUpdater = setInterval(() => this.decrease(), 1000);\r\n  }\r\n\r\n  public switchLGBTFriendly(): void {\r\n    this.LGBTFriendly = !this.LGBTFriendly;\r\n  }\r\n\r\n  public switchSwipesDisabled(): void {\r\n    this.swipesDisabled = !this.swipesDisabled;\r\n  }\r\n\r\n  @computed\r\n  public get isPlaying(): boolean {\r\n    return this.gameState === GameState.playing;\r\n  }\r\n\r\n  @action\r\n  private generate(): void {\r\n    if (this.lifes === 0) {\r\n      return this.stop();\r\n    }\r\n    const first: string[][] = [];\r\n    const second: string[][] = [];\r\n    for (let i = 0; i < this.gameSize; i += 1) {\r\n      if (!Array.isArray(first[i])) {\r\n        first[i] = [];\r\n        second[i] = [];\r\n      }\r\n      for (let u = 0; u < this.gameSize; u += 1) {\r\n        first[i][u] = this.randomEmoji();\r\n        second[i][u] = first[i][u];\r\n      }\r\n    }\r\n\r\n    if (yes()) {\r\n      const randomRow = randomInteger(0, this.gameSize);\r\n      const randomColoumn = randomInteger(0, this.gameSize);\r\n\r\n      second[randomRow][randomColoumn] = this.randomEmoji();\r\n    }\r\n\r\n    this.firstPair = new Pair(first);\r\n    this.secondPair = new Pair(second);\r\n    this.skinColor = randomInteger(0, skin.length);\r\n    this.timer = this.time;\r\n    this.initTimer();\r\n    this.gameState = GameState.playing;\r\n  }\r\n\r\n  public restart(): void {\r\n    this.scoreWrong = 0;\r\n    this.scoreRight = 0;\r\n    this.lifes = this.gameLifes;\r\n    this.generate();\r\n  }\r\n\r\n  @action\r\n  public switchGameMode(): void {\r\n    const currentGameSizeIndex = this.gameSizes.indexOf(this.gameSize);\r\n    const nextGameSize = (currentGameSizeIndex + 1) % this.gameSizes.length;\r\n    this.gameSize = this.gameSizes[nextGameSize];\r\n    console.log(currentGameSizeIndex, nextGameSize, this.gameSize);\r\n    this.restart();\r\n  }\r\n\r\n  private stop(): void {\r\n    if (this.timerUpdater) {\r\n      clearInterval(this.timerUpdater);\r\n      this.timer = 0;\r\n    }\r\n    this.gameState = GameState.gameOver;\r\n  }\r\n\r\n  public get randomEmoticon(): string {\r\n    const emojis = this.LGBTFriendly ? emoticons : sadEmoticons;\r\n    return emojis[randomInteger(0, emojis.length)];\r\n  }\r\n\r\n  public get randomSadOrHappyEmoticon(): string {\r\n    const emojis = this.LGBTFriendly ? happyEmoticons : sadEmoticons;\r\n    return emojis[randomInteger(0, emojis.length)];\r\n  }\r\n\r\n  private randomEmoji(): string {\r\n    if (yes()) {\r\n      return colorable[randomInteger(0, colorable.length)];\r\n    } else {\r\n      return this.randomEmoticon;\r\n    }\r\n  }\r\n\r\n  private set scoredWrong(value: number) {\r\n    if (window.navigator && window.navigator.vibrate) {\r\n      window.navigator.vibrate(200);\r\n    }\r\n\r\n    if (this.lifes > 0) {\r\n      this.lifes -= value;\r\n    }\r\n  }\r\n\r\n  @action\r\n  public voteForPairs(vote: boolean): void {\r\n    if (this.gameState !== GameState.playing) return;\r\n\r\n    if (this.comparePairs === vote) {\r\n      this.scoreRight += this.gameSize;\r\n      this.highScore = this.scoreRight;\r\n    } else {\r\n      this.scoredWrong = 1;\r\n    }\r\n    this.generate();\r\n  }\r\n\r\n  @computed\r\n  public get comparePairs(): boolean {\r\n    return this.firstPair.hash === this.secondPair.hash;\r\n  }\r\n}\r\n\r\nexport const store = new GameStore();\r\n","import { observable, computed } from 'mobx';\r\n\r\ntype Storable = boolean | number | object | any[] | string;\r\n\r\nexport class SavedSettingProperty {\r\n  public name: string;\r\n  public type: string;\r\n\r\n  @observable\r\n  private _value: Storable;\r\n\r\n  private static appPrefix = 'EMOJI_WAR_';\r\n\r\n  public constructor(name: string, defaultValue: Storable, type = 'string') {\r\n    this.name = SavedSettingProperty.appPrefix + name;\r\n    this.type = type;\r\n\r\n    if (window.localStorage.getItem(this.name) === null) {\r\n      this.value = defaultValue;\r\n    }\r\n  }\r\n\r\n  @computed\r\n  public get value(): Storable {\r\n    const item = window.localStorage.getItem(this.name);\r\n\r\n    if (this._value) {\r\n      return this._value;\r\n    }\r\n\r\n    if (item === null) return null;\r\n\r\n    try {\r\n      switch (this.type) {\r\n        case 'bool':\r\n          return item === 'true';\r\n        case 'number':\r\n          return +item;\r\n        case 'object':\r\n        case 'array':\r\n          return JSON.parse(item);\r\n        default:\r\n          return item;\r\n      }\r\n    } catch (err) {\r\n      console.error(err);\r\n      return item;\r\n    }\r\n  }\r\n\r\n  public set value(value: Storable) {\r\n    this._value = value;\r\n    window.localStorage.setItem(this.name, JSON.stringify(value));\r\n  }\r\n}\r\n","import React from 'react';\r\nimport { Swipeable, EventData } from 'react-swipeable';\r\nimport { inject, observer } from 'mobx-react';\r\nimport { withRouter, RouteComponentProps } from 'react-router-dom';\r\nimport { CSSTransition, TransitionGroup, SwitchTransition } from 'react-transition-group';\r\n\r\nimport './styles.scss';\r\nimport '../../styles/global.scss';\r\nimport '../../styles/adaptive.scss';\r\n\r\nimport { GameStore, GameState } from '../../stores/gameStore';\r\nimport Emoji from '../../components/emoji';\r\nimport { skin } from '../../helpers/emojis';\r\nimport { autorun, IReactionDisposer, observable } from 'mobx';\r\n\r\ntype PropsType = RouteComponentProps<{}> & {\r\n  gameStore?: GameStore;\r\n};\r\n\r\nenum Direction {\r\n  'Left',\r\n  'Right',\r\n  'Up',\r\n  'Down',\r\n}\r\n\r\n@(withRouter as any)\r\n@inject('gameStore')\r\n@observer\r\nclass Game extends React.Component<PropsType, null> {\r\n  private gameStore: GameStore;\r\n  private gameStateChanges: IReactionDisposer;\r\n  private pairs = React.createRef<HTMLDivElement>();\r\n\r\n  @observable\r\n  private isAnimating = false;\r\n\r\n  @observable\r\n  private offsetX = 0;\r\n\r\n  @observable\r\n  private offsetY = 0;\r\n\r\n  @observable\r\n  private isSwiping = false;\r\n\r\n  public constructor(props: PropsType) {\r\n    super(props);\r\n\r\n    this.gameStore = this.props.gameStore;\r\n  }\r\n\r\n  private startedAnimating = (): void => {\r\n    this.isAnimating = true;\r\n  };\r\n\r\n  private stopeAnimating = (): void => {\r\n    this.isAnimating = false;\r\n  };\r\n\r\n  public componentWillMount(): void {\r\n    this.gameStore.restart();\r\n\r\n    this.gameStateChanges = autorun(() => {\r\n      const { gameState } = this.gameStore;\r\n      switch (gameState) {\r\n        case GameState.gameOver:\r\n          setTimeout(() => this.over(), 1000);\r\n          break;\r\n        default:\r\n          break;\r\n      }\r\n    });\r\n  }\r\n\r\n  public componentWillUnmount(): void {\r\n    this.gameStateChanges();\r\n  }\r\n\r\n  public onSwipe = (e: EventData): void => {\r\n    const { isPlaying, swipesDisabled } = this.gameStore;\r\n\r\n    if (!isPlaying || swipesDisabled) return;\r\n    this.pairs.current.style.transition = '';\r\n    this.isSwiping = true;\r\n\r\n    this.offsetX = -e.deltaX;\r\n    this.offsetY = -e.deltaY;\r\n\r\n    const screenWidth = window.innerWidth / 2;\r\n\r\n    const maxRotation = (this.offsetX / screenWidth) * 5;\r\n    const maxColor = Math.abs(this.offsetX / screenWidth) + 0.5;\r\n\r\n    if (this.offsetX > 0) {\r\n      this.pairs.current.style.background = `rgba(104, 125, 247, ${maxColor})`;\r\n    } else {\r\n      this.pairs.current.style.background = `rgba(179, 31, 253, ${maxColor})`;\r\n    }\r\n\r\n    this.pairs.current.style.transform = `translateX(${this.offsetX}px) scale(1.05) translateY(${this.offsetY}px) rotate(${maxRotation}deg)`;\r\n  };\r\n\r\n  public onSwiped = (): void => {\r\n    this.isSwiping = false;\r\n\r\n    this.pairs.current.style.transition = 'all 0.2s linear';\r\n    const screenWidth = window.innerWidth / 2;\r\n\r\n    if (Math.abs(this.offsetX / screenWidth) < 0.5) {\r\n      this.resetPairsPosition(true);\r\n    } else {\r\n      this.pairs.current.style.transform = `\r\n        translateX(${Math.sign(this.offsetX) * window.innerWidth}px)\r\n        translateY(${this.offsetY}px)\r\n        rotate(${Math.sign(this.offsetX) * 10}deg)\r\n       `;\r\n\r\n      this.pairs.current.style.background = '';\r\n\r\n      if (this.offsetX > 0) {\r\n        this.yes();\r\n      } else {\r\n        this.no();\r\n      }\r\n\r\n      setTimeout(() => {\r\n        this.resetPairsPosition();\r\n      }, 300);\r\n    }\r\n  };\r\n\r\n  private resetPairsPosition(withAnimation = false): void {\r\n    if (!withAnimation) {\r\n      this.pairs.current.style.transition = '';\r\n    }\r\n\r\n    this.offsetX = 0;\r\n    this.offsetY = 0;\r\n\r\n    this.pairs.current.style.background = '';\r\n    this.pairs.current.style.transform = 'translateX(0px) rotate(0deg) scale(1)';\r\n  }\r\n\r\n  private yes = (): void => this.gameStore.voteForPairs(true);\r\n  private no = (): void => this.gameStore.voteForPairs(false);\r\n  private switch = (): void => this.gameStore.switchGameMode();\r\n  private menu = (): void => this.props.history.push('');\r\n  private over = (): void => this.props.history.push('/gameOver');\r\n  private restart = (): void => this.gameStore.restart();\r\n\r\n  public render(): React.ReactNode {\r\n    const {\r\n      firstPair,\r\n      secondPair,\r\n      timer,\r\n      scoreRight,\r\n      gameLifes,\r\n      gameSize,\r\n      skinColor,\r\n      isPlaying,\r\n      lifes,\r\n    } = this.gameStore;\r\n\r\n    return (\r\n      <div className=\"App\">\r\n        <Swipeable className=\"gameField\" onSwiping={this.onSwipe} onSwiped={this.onSwiped}>\r\n          {/* <div className=\"blured score debug\">\r\n            {firstPair.hash}\r\n            {comparePairs ? ' = ' : ' != '}\r\n            {secondPair.hash}\r\n          </div> */}\r\n          <div className=\"topBar\" style={{ display: 'flex' }}>\r\n            <div className=\"score-holder timer\">\r\n              <div className=\"blured score\">\r\n                <button disabled={!isPlaying} className=\"thumb switch\" onClick={this.menu}>\r\n                  ⏪\r\n                </button>\r\n              </div>\r\n            </div>\r\n            <TransitionGroup className=\"score-holder scale\">\r\n              <CSSTransition key={scoreRight} timeout={500} classNames=\"scale\">\r\n                <div className=\"blured score\">{`🔥 ${scoreRight}`}</div>\r\n              </CSSTransition>\r\n            </TransitionGroup>\r\n            <TransitionGroup className=\"score-holder scale timer\">\r\n              <CSSTransition key={timer} timeout={500} classNames=\"scale\">\r\n                <div className=\"blured score\">{timer}</div>\r\n              </CSSTransition>\r\n            </TransitionGroup>\r\n            <div className=\"score-holder lifes scale\">\r\n              <div className=\"blured score\">\r\n                {Array.from({ length: gameLifes }, () => '❤️').map((heart, index) => (\r\n                  <span key={index} className=\"life\" style={{ opacity: index < lifes ? 1 : 0.1 }}>\r\n                    {heart}\r\n                  </span>\r\n                ))}\r\n              </div>\r\n            </div>\r\n            <div className=\"score-holder timer\">\r\n              <div className=\"blured score\">\r\n                <button disabled={!isPlaying} className=\"thumb switch\" onClick={this.restart}>\r\n                  🔄\r\n                </button>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div ref={this.pairs} className=\"pairs blured\">\r\n            {[firstPair, secondPair].map((pair, index) => {\r\n              return (\r\n                <TransitionGroup key={`${index}`} className=\"pair-holder scale\">\r\n                  <CSSTransition\r\n                    key={pair.hash}\r\n                    timeout={500}\r\n                    classNames=\"scale\"\r\n                    unmountOnExit\r\n                    onEnter={this.startedAnimating}\r\n                    onExited={this.stopeAnimating}\r\n                  >\r\n                    <div className=\"pair\">\r\n                      {pair.pair.map(rows => {\r\n                        return (\r\n                          <div className=\"emoji-row\" key={rows.join()}>\r\n                            {rows.map((item, index) => (\r\n                              <div key={item + index}>\r\n                                <Emoji gameSize={gameSize}>{item}</Emoji>\r\n                              </div>\r\n                            ))}\r\n                          </div>\r\n                        );\r\n                      })}\r\n                    </div>\r\n                  </CSSTransition>\r\n                </TransitionGroup>\r\n              );\r\n            })}\r\n          </div>\r\n          <div className=\"blured buttons\">\r\n            <button disabled={!isPlaying || this.isAnimating} className=\"thumb up\" onClick={this.no}>\r\n              <Emoji>{`👎${skin[skinColor]}`}</Emoji>\r\n            </button>\r\n            <button disabled={!isPlaying || this.isAnimating} className=\"thumb down\" onClick={this.yes}>\r\n              <Emoji>{`👍${skin[skinColor]}`}</Emoji>\r\n            </button>\r\n          </div>\r\n        </Swipeable>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Game as React.ComponentType<any>;\r\n","import React from 'react';\r\nimport './styles.scss';\r\n\r\ninterface Props {\r\n  emoji?: string;\r\n  gameSize?: number;\r\n}\r\n\r\nconst getClass = (size: number): string => {\r\n  switch (size) {\r\n    case 3:\r\n      return 'three';\r\n    case 4:\r\n      return 'four';\r\n    default:\r\n      return '';\r\n  }\r\n};\r\n\r\nconst Emoji: React.FC<Props> = props => {\r\n  return <div className={`${getClass(props.gameSize)} emoji__holder`}>{props.children}</div>;\r\n};\r\n\r\nexport default Emoji;\r\n","import React from 'react';\r\nimport { Swipeable, EventData } from 'react-swipeable';\r\nimport { inject, observer } from 'mobx-react';\r\nimport { withRouter, RouteComponentProps } from 'react-router-dom';\r\nimport { CSSTransition, TransitionGroup, SwitchTransition } from 'react-transition-group';\r\n\r\nimport './styles.scss';\r\nimport '../../styles/global.scss';\r\nimport '../../styles/adaptive.scss';\r\n\r\nimport { GameStore } from '../../stores/gameStore';\r\nimport Emoji from '../../components/emoji';\r\nimport { randomInteger } from '../../helpers/math';\r\nimport { skin, emoticons } from '../../helpers/emojis';\r\n\r\ntype PropsType = RouteComponentProps<{}> & {\r\n  gameStore?: GameStore;\r\n};\r\n\r\n@(withRouter as any)\r\n@inject('gameStore')\r\n@observer\r\nclass Menu extends React.Component<PropsType> {\r\n  private gameStore: GameStore;\r\n  private emoji = this.props.gameStore.randomSadOrHappyEmoticon;\r\n\r\n  public constructor(props: PropsType) {\r\n    super(props);\r\n\r\n    this.gameStore = this.props.gameStore;\r\n  }\r\n\r\n  public componentWillMount(): void {}\r\n\r\n  public componentWillUnmount(): void {}\r\n\r\n  private start = (): void => this.props.history.push('game');\r\n  private settings = (): void => this.props.history.push('settings');\r\n  private about = (): void => this.props.history.push('about');\r\n\r\n  public render(): React.ReactNode {\r\n    return (\r\n      <div className=\"menu\">\r\n        <div className=\"logo\">{this.emoji}</div>\r\n        <div className=\"all-buttons\">\r\n          <div className=\"buttons\">\r\n            <button className=\"button play blured\" onClick={this.start}>\r\n              ▶️\r\n            </button>\r\n          </div>\r\n          <div className=\"buttons\">\r\n            <button className=\"button small blured\" onClick={this.about}>\r\n              🤔\r\n            </button>\r\n            <button className=\"button small blured\" onClick={this.settings}>\r\n              ⚙️\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Menu as React.ComponentType<any>;\r\n","import React from 'react';\r\nimport { inject, observer } from 'mobx-react';\r\nimport { withRouter, RouteComponentProps } from 'react-router-dom';\r\n\r\nimport './styles.scss';\r\nimport '../../styles/global.scss';\r\nimport '../../styles/adaptive.scss';\r\n\r\nimport { GameStore } from '../../stores/gameStore';\r\n\r\ntype PropsType = RouteComponentProps<{}> & {\r\n  gameStore?: GameStore;\r\n};\r\n\r\n@(withRouter as any)\r\n@inject('gameStore')\r\n@observer\r\nclass Settings extends React.Component<PropsType> {\r\n  private gameStore: GameStore;\r\n\r\n  public constructor(props?: PropsType) {\r\n    super(props);\r\n\r\n    this.gameStore = this.props.gameStore;\r\n  }\r\n\r\n  public componentWillMount(): void {}\r\n\r\n  public componentWillUnmount(): void {}\r\n\r\n  private start = (): void => this.props.history.push('game');\r\n  private switchGameType = (): void => this.gameStore.switchGameMode();\r\n  private switchLGBTFriendly = (): void => this.gameStore.switchLGBTFriendly();\r\n  private switchSwipesDisabled = (): void => this.gameStore.switchSwipesDisabled();\r\n  private menu = (): void => this.props.history.goBack();\r\n\r\n  public render(): React.ReactNode {\r\n    const { gameSizeEmoji, LGBTFriendly, swipesDisabled } = this.gameStore;\r\n    return (\r\n      <div className=\"settings\">\r\n        <div className=\"logo\">⚙️</div>\r\n        <div className=\"all-buttons\">\r\n          <button className=\"button small blured\" onClick={this.switchGameType}>\r\n            {gameSizeEmoji} <span className=\"setting-item-text\">Game size</span>\r\n          </button>\r\n          <button className=\"button small blured\" onClick={this.switchSwipesDisabled}>\r\n            👆{' '}\r\n            <span style={{ textDecoration: swipesDisabled ? 'line-through' : 'none' }} className=\"setting-item-text\">\r\n              Swipes\r\n            </span>\r\n          </button>\r\n          <button className=\"button small blured\" onClick={this.switchLGBTFriendly}>\r\n            🏳️‍🌈{' '}\r\n            <span style={{ textDecoration: !LGBTFriendly ? 'line-through' : 'none' }} className=\"setting-item-text\">\r\n              LGBT Friendly\r\n            </span>\r\n          </button>\r\n          <div className=\"buttons\">\r\n            <button className=\"button back blured\" onClick={this.menu}>\r\n              ⏪\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Settings;\r\n","import React from 'react';\r\nimport { Swipeable, EventData } from 'react-swipeable';\r\nimport { inject, observer } from 'mobx-react';\r\nimport { withRouter, RouteComponentProps } from 'react-router-dom';\r\nimport { CSSTransition, TransitionGroup, SwitchTransition } from 'react-transition-group';\r\n\r\nimport './styles.scss';\r\nimport '../../styles/global.scss';\r\nimport '../../styles/adaptive.scss';\r\n\r\nimport { GameStore } from '../../stores/gameStore';\r\nimport Emoji from '../../components/emoji';\r\nimport { randomInteger } from '../../helpers/math';\r\nimport { skin } from '../../helpers/emojis';\r\n\r\ntype PropsType = RouteComponentProps<{}>;\r\n\r\n@(withRouter as any)\r\n@observer\r\nclass About extends React.Component<PropsType> {\r\n  public constructor(props?: PropsType) {\r\n    super(props);\r\n  }\r\n\r\n  public componentWillMount(): void {}\r\n\r\n  public componentWillUnmount(): void {}\r\n\r\n  private start = (): void => this.props.history.push('game');\r\n  private menu = (): void => this.props.history.goBack();\r\n\r\n  public render(): React.ReactNode {\r\n    return (\r\n      <div className=\"about\">\r\n        <div className=\"logo\">🤔</div>\r\n        <div className=\"thanks blured\">\r\n          <big>FAQ:</big> Compare shuffled emoticons from top to bottom <br />\r\n          <big>Big</big> thanks to my friends for great advises and testing this little game <br />\r\n          <big className=\"heart\">❤️</big>\r\n          <big className=\"heart\">🧡</big>\r\n          <big className=\"heart\">💛</big>\r\n          <big className=\"heart\">💚</big>\r\n          <big className=\"heart\">💙</big>\r\n          <big className=\"heart\">💜</big>\r\n          <br />\r\n          I’ve made this for fun.\r\n        </div>\r\n        <div className=\"all-buttons\">\r\n          <div className=\"buttons\">\r\n            <button className=\"button back blured\" onClick={this.menu}>\r\n              ⏪\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default About;\r\n","/* eslint-disable @typescript-eslint/explicit-function-return-type */\r\nimport React from 'react';\r\nimport { Provider } from 'mobx-react';\r\nimport ReactDOM from 'react-dom';\r\nimport { Route, Switch, Redirect, HashRouter } from 'react-router-dom';\r\nimport './index.scss';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport Game from './containers/game';\r\nimport { store as gameStore } from './stores/gameStore';\r\nimport Menu from './containers/menu';\r\nimport Settings from './containers/settings';\r\nimport About from './containers/about';\r\nimport GameOver from './containers/gameOver';\r\nimport { CSSTransition } from 'react-transition-group';\r\n\r\nconst stores = {\r\n  gameStore,\r\n};\r\n\r\nconst routes = [\r\n  { path: '/about', Component: About },\r\n  { path: '/', Component: Menu },\r\n  { path: '/game', Component: Game },\r\n  { path: '/settings', Component: Settings },\r\n  { path: '/gameOver', Component: GameOver },\r\n];\r\n\r\nconst router = (\r\n  <Provider {...stores}>\r\n    <HashRouter>\r\n      {routes.map(({ path, Component }) => (\r\n        <Route key={path} exact path={path}>\r\n          {({ match }: { match: any }) => (\r\n            <CSSTransition in={match != null} timeout={300} classNames=\"page\" unmountOnExit>\r\n              <div className=\"page\">\r\n                <Component />\r\n              </div>\r\n            </CSSTransition>\r\n          )}\r\n        </Route>\r\n      ))}\r\n    </HashRouter>\r\n  </Provider>\r\n);\r\n\r\nReactDOM.render(router, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n\r\n// function listener(): void {\r\n//   switch (screen.orientation.type) {\r\n//     case 'landscape-primary':\r\n//       window.document.documentElement.requestFullscreen();\r\n//       break;\r\n//     default: {\r\n//       if (window.document.fullscreen) {\r\n//         window.document.exitFullscreen();\r\n//       }\r\n//     }\r\n//   }\r\n// }\r\n\r\n// if (window.screen && window.screen.orientation) {\r\n//   window.screen.orientation.addEventListener('change', listener, false);\r\n// }\r\n","import React from 'react';\r\nimport { inject } from 'mobx-react';\r\nimport { withRouter, RouteComponentProps } from 'react-router-dom';\r\n\r\nimport './styles.scss';\r\nimport '../../styles/global.scss';\r\nimport '../../styles/adaptive.scss';\r\n\r\nimport { GameStore } from '../../stores/gameStore';\r\nimport { numberToEmojiString } from '../../helpers/emojis';\r\n\r\ntype PropsType = RouteComponentProps<{}> & {\r\n  gameStore?: GameStore;\r\n};\r\n\r\n@(withRouter as any)\r\n@inject('gameStore')\r\nclass GameOver extends React.Component<PropsType> {\r\n  private gameStore: GameStore;\r\n  private score = 0;\r\n  private emoji = this.props.gameStore.randomSadOrHappyEmoticon;\r\n\r\n  public constructor(props: PropsType) {\r\n    super(props);\r\n\r\n    this.gameStore = this.props.gameStore;\r\n    this.score = this.gameStore.scoreRight;\r\n  }\r\n\r\n  public componentWillMount(): void {}\r\n\r\n  public componentWillUnmount(): void {}\r\n\r\n  private start = (): void => this.props.history.push('/game');\r\n  private menu = (): void => this.props.history.push('/');\r\n  private settings = (): void => this.props.history.push('/settings');\r\n\r\n  public render(): React.ReactNode {\r\n    const { highScore } = this.gameStore;\r\n    const isTop = this.score === highScore;\r\n    return (\r\n      <div className=\"gameOver\">\r\n        <button className=\"blured thanks\">\r\n          {isTop ? '👑 ' : ''}\r\n          {numberToEmojiString(this.score)}\r\n        </button>\r\n        <div className=\"blured highscore\" style={{ visibility: isTop ? 'hidden' : 'visible' }}>\r\n          👑 {highScore}\r\n        </div>\r\n        <div className=\"all-buttons\">\r\n          <div className=\"buttons\">\r\n            <button className=\"button play blured\" onClick={this.start}>\r\n              🔄\r\n            </button>\r\n          </div>\r\n          <div className=\"buttons\">\r\n            <button className=\"button small blured\" onClick={this.menu}>\r\n              🏠\r\n            </button>\r\n            <button className=\"button small blured\" onClick={this.settings}>\r\n              ⚙️\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default GameOver as React.ComponentType<any>;\r\n"],"sourceRoot":""}