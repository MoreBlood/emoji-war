{"version":3,"sources":["serviceWorker.ts","components/emoji/index.tsx","helpers/emojis.ts","components/game/index.tsx","helpers/math.ts","types/pair.ts","index.tsx","stores/gameStore.ts"],"names":["Boolean","window","location","hostname","match","Emoji","props","react_default","a","createElement","className","children","emoticons","skin","colorable","Game","withRouter","inject","observer","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","gameStore","yes","voteForPairs","no","_this$gameStore","firstPair","secondPair","timer","scoreRight","scoreWrong","skinColor","comparePairs","style","display","TransitionGroup","CSSTransition","key","timeout","classNames","concat","map","pair","index","hash","rows","join","item","emoji","onClick","React","Component","randomInteger","min","max","includingMax","arguments","length","undefined","rand","Math","random","round","Pair","originalPair","shuffle","createClass","value","shuffled","i","u","push","sort","counter","Array","isArray","skinModifier","includes","get","stores","gameStore_class","GameStore","gameSize","time","initializerDefineProperty","_descriptor","_descriptor2","_descriptor3","_descriptor4","_descriptor5","_descriptor6","timerUpdater","generate","scoredWrong","clearInterval","setInterval","decrease","first","second","randomEmoji","randomRow","randomColoumn","initTimer","vote","set","navigator","vibrate","applyDecoratedDescriptor","prototype","observable","configurable","enumerable","writable","initializer","action","getOwnPropertyDescriptor","computed","router","mobx_react_module","react_router_dom","react_router","exact","path","component","ReactDOM","render","document","getElementById","serviceWorker","ready","then","registration","unregister"],"mappings":"8SAYoBA,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MAAM,yHCNpBC,2BAJgB,SAAAC,GAC7B,OAAOC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,iBAAiBJ,EAAMK,YCRlCC,EAAY,CACvB,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,gBAGWC,EAAO,CAAC,eAAM,eAAM,eAAM,eAAM,gBAEhCC,EAAY,CACvB,eACA,eACA,eACA,SACA,eACA,eACA,eACA,SACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,SACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,SACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,SACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,gBCrFaC,KAnFbC,OACDC,YAAO,eACPC,0BAIC,SAAAH,E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","file":"static/js/main.87e99984.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/),\n);\n\ninterface Config {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n}\n\nfunction registerValidSW(swUrl: string, config?: Config): void {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration): void => {\n      registration.onupdatefound = (): void => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = (): void => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.',\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error): void => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config): void {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then((response): void => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (response.status === 404 || (contentType != null && contentType.indexOf('javascript') === -1)) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration): void => {\n          registration.unregister().then((): void => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch((): void => {\n      console.log('No internet connection found. App is running in offline mode.');\n    });\n}\n\nexport function register(config?: Config): void {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL((process as { env: { [key: string]: string } }).env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', (): void => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then((): void => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA',\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nexport function unregister(): void {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then((registration): void => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport './styles.scss';\n\ninterface Props {\n  emoji?: string;\n}\n\nconst Emoji: React.FC<Props> = props => {\n  return <div className=\"emoji__holder\">{props.children}</div>;\n};\n\nexport default Emoji;\n","export const emoticons = [\n  '😀',\n  '😁',\n  '😂',\n  '😃',\n  '😄',\n  '😅',\n  '😆',\n  '😇',\n  '😈',\n  '😉',\n  '😊',\n  '😋',\n  '😌',\n  '😍',\n  '😎',\n  '😏',\n  '😐',\n  '😑',\n  '😒',\n  '😓',\n  '😔',\n  '😕',\n  '😖',\n  '😗',\n  '😘',\n  '😙',\n  '😚',\n  '😛',\n  '😜',\n  '😝',\n  '😞',\n  '😟',\n  '😠',\n  '😡',\n  '😢',\n  '😣',\n  '😤',\n  '😥',\n  '😦',\n  '😧',\n  '😨',\n  '😩',\n  '😪',\n  '😫',\n  '😬',\n  '😭',\n  '😮',\n  '😯',\n  '😰',\n  '😱',\n  '😲',\n  '😳',\n  '😴',\n  '😵',\n  '😶',\n  '😷',\n  '😸',\n  '😹',\n  '😺',\n  '😻',\n  '😼',\n  '😽',\n  '😾',\n  '😿',\n  '🙀',\n  '🙁',\n  '🙂',\n  '🙃',\n  '🙄',\n];\n\nexport const skin = ['🏻', '🏼', '🏽', '🏾', '🏿'];\n\nexport const colorable = [\n  '👋',\n  '🤚',\n  '🖐',\n  '✋',\n  '🖖',\n  '👌',\n  '🤏',\n  '✌',\n  '🤞',\n  '🤟',\n  '🤘',\n  '🤙',\n  '👈',\n  '👉',\n  '👆',\n  '🖕',\n  '👇',\n  '👍',\n  '👎',\n  '✊',\n  '👊',\n  '🤛',\n  '🤜',\n  '👏',\n  '🙌',\n  '👐',\n  '🤲',\n  '🙏',\n  '✍',\n  '💅',\n  '🤝',\n  '🤳',\n  '💪',\n  '🦵',\n  '🦶',\n  '👂',\n  '🦻',\n  '👃',\n  '👶',\n  '🧒',\n  '👦',\n  '👧',\n  '🧑',\n  '👱',\n  '👨',\n  '🧔',\n  '👩',\n  '🧓',\n  '👴',\n  '👵',\n  '🙍',\n  '🙎',\n  '🙅',\n  '🙆',\n  '💁',\n  '🙋',\n  '🧏',\n  '🙇',\n  '🤦',\n  '🤷',\n  '👮',\n  '🕵',\n  '💂',\n  '👷',\n  '🤴',\n  '👸',\n  '👳',\n  '👲',\n  '🧕',\n  '🤵',\n  '👰',\n  '🤰',\n  '🤱',\n  '👼',\n  '🎅',\n  '🤶',\n  '🦸',\n  '🦹',\n  '🧙',\n  '🧚',\n  '🧛',\n  '🧜',\n  '🧝',\n  '💆',\n  '💇',\n  '🚶',\n  '🧍',\n  '🧎',\n  '🏃',\n  '💃',\n  '🕺',\n  '🕴',\n  '👯',\n  '🧖',\n  '🧗',\n  '🏇',\n  '🏂',\n  '🏌',\n  '🏄',\n  '🚣',\n  '🏊',\n  '⛹',\n  '🏋',\n  '🚴',\n  '🚵',\n  '🤸',\n  '🤽',\n  '🤾',\n  '🤹',\n  '🧘',\n  '👭',\n  '👫',\n  '👬',\n  '💏',\n  '💑',\n  '👪',\n  '🤼',\n];\n","import React from 'react';\nimport { Swipeable, EventData } from 'react-swipeable';\nimport { inject, observer } from 'mobx-react';\nimport { withRouter, RouteComponentProps } from 'react-router-dom';\nimport { CSSTransition, TransitionGroup, SwitchTransition } from 'react-transition-group';\n\nimport './styles.scss';\nimport '../../styles/global.scss';\nimport '../../styles/adaptive.scss';\n\nimport { GameStore } from '../../stores/gameStore';\nimport Emoji from '../emoji';\nimport { randomInteger } from '../../helpers/math';\nimport { skin } from '../../helpers/emojis';\n\ninterface KeyboardEvent {\n  keyCode: number;\n}\n\ntype PropsType = RouteComponentProps<null> & {\n  gameStore: GameStore;\n};\n\n@(withRouter as any)\n@inject('gameStore')\n@observer\nclass Game extends React.Component<PropsType> {\n  private gameStore: GameStore;\n\n  public constructor(props: PropsType) {\n    super(props);\n\n    this.gameStore = this.props.gameStore;\n  }\n\n  public componentWillMount(): void {}\n\n  public componentWillUnmount(): void {}\n\n  private yes = (): void => this.gameStore.voteForPairs(true);\n  private no = (): void => this.gameStore.voteForPairs(false);\n\n  public render(): React.ReactNode {\n    const { firstPair, secondPair, timer, scoreRight, scoreWrong, comparePairs, skinColor } = this.gameStore;\n    return (\n      <div className=\"App\">\n        <div className=\"gameField\">\n          {/* <div className=\"blured score debug\">\n            {firstPair.hash}\n            {comparePairs ? ' = ' : ' != '}\n            {secondPair.hash}\n          </div> */}\n          <div style={{ display: 'flex' }}>\n            <TransitionGroup className=\"score-holder scale\">\n              <CSSTransition key={scoreRight} timeout={500} classNames=\"scale\">\n                <div className=\"blured score\">{`✅: ${scoreRight}`}</div>\n              </CSSTransition>\n            </TransitionGroup>\n            <TransitionGroup className=\"score-holder scale timer\">\n              <CSSTransition key={timer} timeout={500} classNames=\"scale\">\n                <div className=\"blured score\">{timer}</div>\n              </CSSTransition>\n            </TransitionGroup>\n            <TransitionGroup className=\"score-holder scale\">\n              <CSSTransition key={scoreWrong} timeout={500} classNames=\"scale\">\n                <div className=\"blured score\">{`❌: ${scoreWrong}`}</div>\n              </CSSTransition>\n            </TransitionGroup>\n          </div>\n          <div className=\"pairs blured\">\n            {[firstPair, secondPair].map((pair, index) => {\n              return (\n                <TransitionGroup key={`${index}`} className=\"pair-holder scale\">\n                  <CSSTransition key={pair.hash} timeout={500} classNames=\"scale\">\n                    <div className=\"pair\">\n                      {pair.pair.map(rows => {\n                        return (\n                          <div className=\"emoji-row\" key={rows.join()}>\n                            {rows.map(item => (\n                              <div key={item}>\n                                <Emoji>{item}</Emoji>\n                              </div>\n                            ))}\n                          </div>\n                        );\n                      })}\n                    </div>\n                  </CSSTransition>\n                </TransitionGroup>\n              );\n            })}\n          </div>\n          <div className=\"blured buttons\">\n            <button className=\"thumb down\" onClick={this.yes}>\n              <Emoji>{`👍${skin[skinColor]}`}</Emoji>\n            </button>\n            <button className=\"thumb up\" onClick={this.no}>\n              <Emoji>{`👎${skin[skinColor]}`}</Emoji>\n            </button>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Game;\n","export function randomInteger(min: number, max: number, includingMax = false): number {\n  let rand = min - 0.5 + Math.random() * ((includingMax ? max : max - 1) - min + 1);\n  return Math.round(rand);\n}\n\nexport function yes(): boolean {\n  return Math.random() > 0.5;\n}\n","import { skin, colorable } from '../helpers/emojis';\nimport { randomInteger } from '../helpers/math';\n\nexport class Pair {\n  private originalPair: string[][] = [];\n  public pair: string[][] = [];\n\n  public constructor(pair: string[][] = []) {\n    this.originalPair = pair;\n    this.shuffle();\n  }\n\n  public get hash(): string {\n    let hash = '';\n\n    for (let i = 0; i < this.originalPair.length; i += 1) {\n      for (let u = 0; u < this.originalPair[i].length; u += 1) {\n        hash += this.originalPair[i][u];\n      }\n    }\n\n    return hash;\n  }\n\n  private shuffle(): void {\n    const shuffled = [];\n    for (let i = 0; i < this.originalPair.length; i += 1) {\n      for (let u = 0; u < this.originalPair[i].length; u += 1) {\n        shuffled.push(this.originalPair[i][u]);\n      }\n    }\n\n    shuffled.sort(() => Math.random() - 0.5);\n    let counter = 0;\n\n    for (let i = 0; i < this.originalPair.length; i += 1) {\n      if (!Array.isArray(this.pair[i])) {\n        this.pair[i] = [];\n      }\n      for (let u = 0; u < this.originalPair[i].length; u += 1) {\n        const skinModifier = colorable.includes(shuffled[counter]) ? skin[randomInteger(0, skin.length)] : '';\n        this.pair[i][u] = shuffled[counter] + skinModifier;\n        counter += 1;\n      }\n    }\n  }\n}\n","import React from 'react';\nimport { Provider } from 'mobx-react';\nimport ReactDOM from 'react-dom';\nimport { Route, Switch, Redirect, HashRouter } from 'react-router-dom';\nimport './index.css';\nimport * as serviceWorker from './serviceWorker';\nimport Game from './components/game';\nimport { store as gameStore } from './stores/gameStore';\n\nconst stores = {\n  gameStore,\n};\n\nconst router = (\n  <Provider {...stores}>\n    <HashRouter>\n      <Switch>\n        <Route exact path=\"/\" component={Game} />\n      </Switch>\n    </HashRouter>\n  </Provider>\n);\n\nReactDOM.render(router, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n\n// function listener(): void {\n//   switch (screen.orientation.type) {\n//     case 'landscape-primary':\n//       window.document.documentElement.requestFullscreen();\n//       break;\n//     default: {\n//       if (window.document.fullscreen) {\n//         window.document.exitFullscreen();\n//       }\n//     }\n//   }\n// }\n\n// if (window.screen && window.screen.orientation) {\n//   window.screen.orientation.addEventListener('change', listener, false);\n// }\n","import { observable, action, computed, toJS } from 'mobx';\nimport { randomInteger, yes } from '../helpers/math';\nimport { emoticons, skin, colorable } from '../helpers/emojis';\nimport { Pair } from '../types/pair';\n\nexport class GameStore {\n  public gameSize = 2;\n  private time = 3 * this.gameSize;\n\n  @observable\n  public firstPair: Pair = new Pair();\n\n  @observable\n  public secondPair: Pair = new Pair();\n\n  @observable\n  public scoreRight: number = 0;\n\n  @observable\n  public scoreWrong: number = 0;\n\n  @observable\n  public timer: number = this.time;\n\n  @observable\n  public skinColor: number = 0;\n\n  private timerUpdater: NodeJS.Timeout = null;\n\n  public constructor() {\n    this.generate();\n  }\n\n  @action\n  private decrease(): void {\n    this.timer -= 1;\n    if (this.timer === 0) {\n      this.generate();\n      this.scoredWrong += 1;\n    }\n  }\n\n  private initTimer(): void {\n    if (this.timerUpdater) {\n      clearInterval(this.timerUpdater);\n    }\n    this.timerUpdater = setInterval(() => this.decrease(), 1000);\n  }\n\n  @action\n  private generate(): void {\n    const first: string[][] = [];\n    const second: string[][] = [];\n    for (let i = 0; i < this.gameSize; i += 1) {\n      if (!Array.isArray(first[i])) {\n        first[i] = [];\n        second[i] = [];\n      }\n      for (let u = 0; u < this.gameSize; u += 1) {\n        first[i][u] = GameStore.randomEmoji();\n        second[i][u] = first[i][u];\n      }\n    }\n\n    if (yes()) {\n      const randomRow = randomInteger(0, this.gameSize);\n      const randomColoumn = randomInteger(0, this.gameSize);\n\n      second[randomRow][randomColoumn] = GameStore.randomEmoji();\n    }\n\n    this.firstPair = new Pair(first);\n    this.secondPair = new Pair(second);\n    this.skinColor = randomInteger(0, skin.length);\n    this.timer = this.time;\n    this.initTimer();\n  }\n\n  public static randomEmoji(): string {\n    if (yes()) {\n      return colorable[randomInteger(0, colorable.length)];\n    } else {\n      return emoticons[randomInteger(0, emoticons.length)];\n    }\n  }\n\n  private set scoredWrong(value: number) {\n    if (window.navigator && window.navigator.vibrate) {\n      window.navigator.vibrate(200);\n    }\n\n    this.scoreWrong = value;\n  }\n\n  private get scoredWrong(): number {\n    return this.scoreWrong;\n  }\n\n  @action\n  public voteForPairs(vote: boolean): void {\n    if (this.comparePairs === vote) {\n      this.scoreRight += 1;\n    } else {\n      this.scoredWrong += 1;\n    }\n    this.generate();\n  }\n\n  @computed\n  public get comparePairs(): boolean {\n    return this.firstPair.hash === this.secondPair.hash;\n  }\n}\n\nexport const store = new GameStore();\n"],"sourceRoot":""}