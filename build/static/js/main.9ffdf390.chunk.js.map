{"version":3,"sources":["serviceWorker.ts","helpers/math.ts","helpers/emojis.ts","types/pair.ts","stores/gameStore.ts","containers/game/index.tsx","components/emoji/index.tsx","containers/menu/index.tsx","containers/settings/index.tsx","containers/about/index.tsx","index.tsx","containers/gameOver/index.tsx"],"names":["Boolean","window","location","hostname","match","randomInteger","min","max","includingMax","arguments","length","undefined","rand","Math","random","round","yes","sadEmoticons","happyEmoticons","emoticons","Array","from","Set","concat","values","sort","skin","colorable","GameState","Pair","pair","Object","classCallCheck","this","originalPair","shuffle","createClass","key","value","shuffled","i","u","push","counter","isArray","skinModifier","includes","get","hash","Direction","store","_class","GameStore","initializerDefineProperty","_descriptor","_descriptor2","_descriptor3","_descriptor4","_descriptor5","_descriptor6","_descriptor7","_descriptor8","_descriptor9","_descriptor10","_descriptor11","_descriptor12","timerUpdater","timer","scoredWrong","generate","_this","clearInterval","setInterval","decrease","LGBTFriendly","swipesDisabled","lifes","stop","first","second","gameSize","randomEmoji","randomRow","randomColoumn","firstPair","secondPair","skinColor","time","initTimer","gameState","playing","scoreWrong","scoreRight","gameLifes","restart","gameOver","randomEmoticon","vote","comparePairs","emojis","set","navigator","vibrate","applyDecoratedDescriptor","prototype","observable","configurable","enumerable","writable","initializer","computed","getOwnPropertyDescriptor","action","Emoji","props","react_default","a","createElement","className","children","Game","withRouter","inject","observer","possibleConstructorReturn","getPrototypeOf","call","gameStore","gameStateChanges","game_descriptor","assertThisInitialized","game_descriptor2","startedAnimating","isAnimating","stopeAnimating","onSwipe","e","_this$gameStore","isPlaying","isSwiping","dir","Left","no","Right","onSwiped","voteForPairs","switch","switchGameMode","menu","history","over","_this2","autorun","setTimeout","_this3","_this$gameStore2","es","delta","onSwiping","style","display","disabled","onClick","TransitionGroup","CSSTransition","timeout","classNames","map","heart","index","opacity","unmountOnExit","onEnter","onExited","rows","join","item","emoji","React","Component","Menu","randomSadOrHappyEmoticon","start","settings","about","Settings","switchGameType","switchLGBTFriendly","switchSwipesDisabled","goBack","gameSizeEmoji","textDecoration","About","stores","routes","path","GameOver","score","num","array","toString","split","res","forEach","el","numberToEmojiString","router","mobx_react_module","react_router_dom","_ref","react_router","exact","_ref2","in","ReactDOM","render","document","getElementById","serviceWorker","ready","then","registration","unregister"],"mappings":"mYAYoBA,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MAAM,sLCjB5B,SAASC,EAAcC,EAAaC,GAA2C,IAA9BC,EAA8BC,UAAAC,OAAA,QAAAC,IAAAF,UAAA,IAAAA,UAAA,GAChFG,EAAON,EAAM,GAAMO,KAAKC,WAAaN,EAAeD,EAAMA,EAAM,GAAKD,EAAM,GAC/E,OAAOO,KAAKE,MAAMH,GAGb,SAASI,IACd,OAAOH,KAAKC,SAAW,GCNlB,IAAMG,EAAe,CAC1B,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,gBAEWC,EAAiB,CAC5B,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,gBAGWC,EAAYC,MAAMC,KAAK,IAAIC,IAAJ,GAAAC,OAAYN,EAAiBC,IAAiBM,UAAUC,KAC1F,kBAAMZ,KAAKC,SAAW,KAGXY,EAAO,CAAC,eAAM,eAAM,eAAM,eAAM,gBAEhCC,EAAY,CACvB,eACA,eACA,eACA,SACA,eACA,eACA,eACA,SACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,SACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,SACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,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","file":"static/js/main.9ffdf390.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/),\r\n);\r\n\r\ninterface Config {\r\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\r\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\r\n}\r\n\r\nfunction registerValidSW(swUrl: string, config?: Config): void {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then((registration): void => {\r\n      registration.onupdatefound = (): void => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = (): void => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.',\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch((error): void => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl: string, config?: Config): void {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then((response): void => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (response.status === 404 || (contentType != null && contentType.indexOf('javascript') === -1)) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then((registration): void => {\r\n          registration.unregister().then((): void => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch((): void => {\r\n      console.log('No internet connection found. App is running in offline mode.');\r\n    });\r\n}\r\n\r\nexport function register(config?: Config): void {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL((process as { env: { [key: string]: string } }).env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', (): void => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then((): void => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA',\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nexport function unregister(): void {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then((registration): void => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","export function randomInteger(min: number, max: number, includingMax = false): number {\r\n  let rand = min - 0.5 + Math.random() * ((includingMax ? max : max - 1) - min + 1);\r\n  return Math.round(rand);\r\n}\r\n\r\nexport function yes(): boolean {\r\n  return Math.random() > 0.5;\r\n}\r\n","export const sadEmoticons = [\r\n  '😑',\r\n  '😒',\r\n  '😓',\r\n  '😔',\r\n  '😕',\r\n  '😖',\r\n  '😞',\r\n  '😟',\r\n  '😠',\r\n  '😡',\r\n  '😢',\r\n  '😣',\r\n  '😤',\r\n  '😥',\r\n  '😦',\r\n  '😧',\r\n  '😨',\r\n  '😩',\r\n  '😪',\r\n  '😫',\r\n  '😭',\r\n  '😯',\r\n  '😰',\r\n  '😳',\r\n  '😵',\r\n  '😶',\r\n  '😷',\r\n  '😾',\r\n  '😿',\r\n  '🙁',\r\n  '🙃',\r\n  '🙄',\r\n];\r\nexport const happyEmoticons = [\r\n  '😀',\r\n  '😁',\r\n  '😂',\r\n  '😃',\r\n  '😄',\r\n  '😅',\r\n  '😆',\r\n  '😇',\r\n  '😈',\r\n  '😉',\r\n  '😊',\r\n  '😋',\r\n  '😌',\r\n  '😍',\r\n  '😎',\r\n  '😏',\r\n  '😐',\r\n  '😗',\r\n  '😘',\r\n  '😙',\r\n  '😚',\r\n  '😛',\r\n  '😜',\r\n  '😝',\r\n  '😱',\r\n  '😲',\r\n  '😳',\r\n  '😴',\r\n  '😸',\r\n  '😹',\r\n  '😺',\r\n  '😻',\r\n  '😼',\r\n  '😽',\r\n  '🙀',\r\n  '🙂',\r\n];\r\n\r\nexport const emoticons = Array.from(new Set([...sadEmoticons, ...happyEmoticons]).values()).sort(\r\n  () => Math.random() - 0.5,\r\n);\r\n\r\nexport const skin = ['🏻', '🏼', '🏽', '🏾', '🏿'];\r\n\r\nexport const colorable = [\r\n  '👋',\r\n  '🤚',\r\n  '🖐',\r\n  '✋',\r\n  '🖖',\r\n  '👌',\r\n  '🤏',\r\n  '✌',\r\n  '🤞',\r\n  '🤟',\r\n  '🤘',\r\n  '🤙',\r\n  '👈',\r\n  '👉',\r\n  '👆',\r\n  '🖕',\r\n  '👇',\r\n  '👍',\r\n  '👎',\r\n  '✊',\r\n  '👊',\r\n  '🤛',\r\n  '🤜',\r\n  '👏',\r\n  '🙌',\r\n  '👐',\r\n  '🤲',\r\n  '🙏',\r\n  '✍',\r\n  '💅',\r\n  '🤝',\r\n  '🤳',\r\n  '💪',\r\n  '🦵',\r\n  '🦶',\r\n  '👂',\r\n  '🦻',\r\n  '👃',\r\n  '👶',\r\n  '🧒',\r\n  '👦',\r\n  '👧',\r\n  '🧑',\r\n  '👱',\r\n  '👨',\r\n  '🧔',\r\n  '👩',\r\n  '🧓',\r\n  '👴',\r\n  '👵',\r\n  '🙍',\r\n  '🙎',\r\n  '🙅',\r\n  '🙆',\r\n  '💁',\r\n  '🙋',\r\n  '🧏',\r\n  '🙇',\r\n  '🤦',\r\n  '🤷',\r\n  '👮',\r\n  '🕵',\r\n  '💂',\r\n  '👷',\r\n  '🤴',\r\n  '👸',\r\n  '👳',\r\n  '👲',\r\n  '🧕',\r\n  '🤵',\r\n  '👰',\r\n  '🤰',\r\n  '🤱',\r\n  '👼',\r\n  '🎅',\r\n  '🤶',\r\n  '🦸',\r\n  '🦹',\r\n  '🧙',\r\n  '🧚',\r\n  '🧛',\r\n  '🧜',\r\n  '🧝',\r\n  '💆',\r\n  '💇',\r\n  '🚶',\r\n  '🧍',\r\n  '🧎',\r\n  '🏃',\r\n  '💃',\r\n  '🕺',\r\n  '🕴',\r\n  '👯',\r\n  '🧖',\r\n  '🧗',\r\n  '🏇',\r\n  '🏂',\r\n  '🏌',\r\n  '🏄',\r\n  '🚣',\r\n  '🏊',\r\n  '⛹',\r\n  '🏋',\r\n  '🚴',\r\n  '🚵',\r\n  '🤸',\r\n  '🤽',\r\n  '🤾',\r\n  '🤹',\r\n  '🧘',\r\n  // '👭',\r\n  // '👫',\r\n  // '👬',\r\n  '💏',\r\n  '💑',\r\n  '👪',\r\n  '🤼',\r\n];\r\n\r\nfunction getNumberEmoji(num: number): string {\r\n  const numbers = ['0️⃣', '1️⃣', '2️⃣', '3️⃣', '4️⃣', '5️⃣', '6️⃣', '7️⃣', '8️⃣', '9️⃣'];\r\n  return numbers[num];\r\n}\r\n\r\nexport function numberToEmojiString(num: number): string[] {\r\n  const array = num.toString().split('');\r\n  const res: string[] = [];\r\n\r\n  array.forEach(el => {\r\n    res.push(getNumberEmoji(+el));\r\n  });\r\n\r\n  return res;\r\n}\r\n","import { skin, colorable } from '../helpers/emojis';\r\nimport { randomInteger } from '../helpers/math';\r\n\r\nexport class Pair {\r\n  private originalPair: string[][] = [];\r\n  public pair: string[][] = [];\r\n\r\n  public constructor(pair: string[][] = []) {\r\n    this.originalPair = pair;\r\n    this.shuffle();\r\n  }\r\n\r\n  public get hash(): string {\r\n    let hash = '';\r\n\r\n    for (let i = 0; i < this.originalPair.length; i += 1) {\r\n      for (let u = 0; u < this.originalPair[i].length; u += 1) {\r\n        hash += this.originalPair[i][u];\r\n      }\r\n    }\r\n\r\n    return hash;\r\n  }\r\n\r\n  private shuffle(): void {\r\n    const shuffled = [];\r\n    for (let i = 0; i < this.originalPair.length; i += 1) {\r\n      for (let u = 0; u < this.originalPair[i].length; u += 1) {\r\n        shuffled.push(this.originalPair[i][u]);\r\n      }\r\n    }\r\n\r\n    shuffled.sort(() => Math.random() - 0.5);\r\n    let counter = 0;\r\n\r\n    for (let i = 0; i < this.originalPair.length; i += 1) {\r\n      if (!Array.isArray(this.pair[i])) {\r\n        this.pair[i] = [];\r\n      }\r\n      for (let u = 0; u < this.originalPair[i].length; u += 1) {\r\n        const skinModifier = colorable.includes(shuffled[counter]) ? skin[randomInteger(0, skin.length)] : '';\r\n        this.pair[i][u] = shuffled[counter] + skinModifier;\r\n        counter += 1;\r\n      }\r\n    }\r\n  }\r\n}\r\n","import { observable, action, computed, toJS } from 'mobx';\r\nimport { randomInteger, yes } from '../helpers/math';\r\nimport { emoticons, skin, colorable, sadEmoticons, happyEmoticons } from '../helpers/emojis';\r\nimport { Pair } from '../types/pair';\r\n\r\nexport enum GameState {\r\n  gameOver,\r\n  pause,\r\n  playing,\r\n}\r\n\r\nexport class GameStore {\r\n  @observable\r\n  public gameSize = 2;\r\n\r\n  @observable\r\n  public gameState: GameState = GameState.playing;\r\n\r\n  @observable\r\n  public gameLifes = 3;\r\n\r\n  @computed\r\n  private get time(): number {\r\n    return 2 * this.gameSize;\r\n  }\r\n\r\n  @observable\r\n  public lifes: number = this.gameLifes;\r\n\r\n  @observable\r\n  public LGBTFriendly = true;\r\n\r\n  @observable\r\n  public swipesDisabled = true;\r\n\r\n  @computed\r\n  public get gameSizeEmoji(): string {\r\n    switch (this.gameSize) {\r\n      case 2:\r\n        return '2️⃣';\r\n      case 3:\r\n        return '3️⃣';\r\n      default:\r\n        return '';\r\n    }\r\n  }\r\n\r\n  @observable\r\n  public firstPair: Pair = new Pair();\r\n\r\n  @observable\r\n  public secondPair: Pair = new Pair();\r\n\r\n  @observable\r\n  public scoreRight: number = 0;\r\n\r\n  @observable\r\n  public scoreWrong: number = 0;\r\n\r\n  @observable\r\n  public timer: number = this.time;\r\n\r\n  @observable\r\n  public skinColor: number = 0;\r\n\r\n  private timerUpdater: NodeJS.Timeout = null;\r\n\r\n  @action\r\n  private decrease(): void {\r\n    this.timer -= 1;\r\n    if (this.timer < 0) {\r\n      this.scoredWrong = 1;\r\n      this.generate();\r\n    }\r\n  }\r\n\r\n  private initTimer(): void {\r\n    if (this.timerUpdater) {\r\n      clearInterval(this.timerUpdater);\r\n    }\r\n    this.timerUpdater = setInterval(() => this.decrease(), 1000);\r\n  }\r\n\r\n  public switchLGBTFriendly(): void {\r\n    this.LGBTFriendly = !this.LGBTFriendly;\r\n  }\r\n\r\n  public switchSwipesDisabled(): void {\r\n    this.swipesDisabled = !this.swipesDisabled;\r\n  }\r\n\r\n  @computed\r\n  public get isPlaying(): boolean {\r\n    return this.gameState === GameState.playing;\r\n  }\r\n\r\n  @action\r\n  private generate(): void {\r\n    if (this.lifes === 0) {\r\n      return this.stop();\r\n    }\r\n    const first: string[][] = [];\r\n    const second: string[][] = [];\r\n    for (let i = 0; i < this.gameSize; i += 1) {\r\n      if (!Array.isArray(first[i])) {\r\n        first[i] = [];\r\n        second[i] = [];\r\n      }\r\n      for (let u = 0; u < this.gameSize; u += 1) {\r\n        first[i][u] = this.randomEmoji();\r\n        second[i][u] = first[i][u];\r\n      }\r\n    }\r\n\r\n    if (yes()) {\r\n      const randomRow = randomInteger(0, this.gameSize);\r\n      const randomColoumn = randomInteger(0, this.gameSize);\r\n\r\n      second[randomRow][randomColoumn] = this.randomEmoji();\r\n    }\r\n\r\n    this.firstPair = new Pair(first);\r\n    this.secondPair = new Pair(second);\r\n    this.skinColor = randomInteger(0, skin.length);\r\n    this.timer = this.time;\r\n    this.initTimer();\r\n    this.gameState = GameState.playing;\r\n  }\r\n\r\n  public restart(): void {\r\n    this.scoreWrong = 0;\r\n    this.scoreRight = 0;\r\n    this.lifes = this.gameLifes;\r\n    this.generate();\r\n  }\r\n\r\n  public switchGameMode(): void {\r\n    if (this.gameSize === 2) {\r\n      this.gameSize = 3;\r\n    } else {\r\n      this.gameSize = 2;\r\n    }\r\n    this.restart();\r\n  }\r\n\r\n  private stop(): void {\r\n    if (this.timerUpdater) {\r\n      clearInterval(this.timerUpdater);\r\n      this.timer = 0;\r\n    }\r\n    this.gameState = GameState.gameOver;\r\n  }\r\n\r\n  public get randomEmoticon(): string {\r\n    const emojis = this.LGBTFriendly ? emoticons : sadEmoticons;\r\n    return emojis[randomInteger(0, emojis.length)];\r\n  }\r\n\r\n  public get randomSadOrHappyEmoticon(): string {\r\n    const emojis = this.LGBTFriendly ? happyEmoticons : sadEmoticons;\r\n    return emojis[randomInteger(0, emojis.length)];\r\n  }\r\n\r\n  private randomEmoji(): string {\r\n    if (yes()) {\r\n      return colorable[randomInteger(0, colorable.length)];\r\n    } else {\r\n      return this.randomEmoticon;\r\n    }\r\n  }\r\n\r\n  private set scoredWrong(value: number) {\r\n    if (window.navigator && window.navigator.vibrate) {\r\n      window.navigator.vibrate(200);\r\n    }\r\n\r\n    if (this.lifes > 0) {\r\n      this.lifes -= value;\r\n    }\r\n  }\r\n\r\n  @action\r\n  public voteForPairs(vote: boolean): void {\r\n    if (this.gameState !== GameState.playing) return;\r\n\r\n    if (this.comparePairs === vote) {\r\n      this.scoreRight += this.gameSize;\r\n    } else {\r\n      this.scoredWrong = 1;\r\n    }\r\n    this.generate();\r\n  }\r\n\r\n  @computed\r\n  public get comparePairs(): boolean {\r\n    return this.firstPair.hash === this.secondPair.hash;\r\n  }\r\n}\r\n\r\nexport const store = new GameStore();\r\n","import React from 'react';\r\nimport { Swipeable, EventData } from 'react-swipeable';\r\nimport { inject, observer } from 'mobx-react';\r\nimport { withRouter, RouteComponentProps } from 'react-router-dom';\r\nimport { CSSTransition, TransitionGroup, SwitchTransition } from 'react-transition-group';\r\n\r\nimport './styles.scss';\r\nimport '../../styles/global.scss';\r\nimport '../../styles/adaptive.scss';\r\n\r\nimport { GameStore, GameState } from '../../stores/gameStore';\r\nimport Emoji from '../../components/emoji';\r\nimport { skin } from '../../helpers/emojis';\r\nimport { autorun, IReactionDisposer, observable } from 'mobx';\r\n\r\ntype PropsType = RouteComponentProps<{}> & {\r\n  gameStore?: GameStore;\r\n};\r\n\r\nenum Direction {\r\n  'Left',\r\n  'Right',\r\n  'Up',\r\n  'Down',\r\n}\r\n\r\n@(withRouter as any)\r\n@inject('gameStore')\r\n@observer\r\nclass Game extends React.Component<PropsType, null> {\r\n  private gameStore: GameStore;\r\n  private gameStateChanges: IReactionDisposer;\r\n\r\n  @observable\r\n  private isAnimating = false;\r\n\r\n  @observable\r\n  private isSwiping = false;\r\n\r\n  public constructor(props: PropsType) {\r\n    super(props);\r\n\r\n    this.gameStore = this.props.gameStore;\r\n  }\r\n\r\n  private startedAnimating = (): void => {\r\n    this.isAnimating = true;\r\n  };\r\n\r\n  private stopeAnimating = (): void => {\r\n    this.isAnimating = false;\r\n  };\r\n\r\n  public componentWillMount(): void {\r\n    this.gameStore.restart();\r\n\r\n    this.gameStateChanges = autorun(() => {\r\n      const { gameState } = this.gameStore;\r\n      switch (gameState) {\r\n        case GameState.gameOver:\r\n          setTimeout(() => this.over(), 1000);\r\n          break;\r\n        default:\r\n          break;\r\n      }\r\n    });\r\n  }\r\n\r\n  public componentWillUnmount(): void {\r\n    this.gameStateChanges();\r\n  }\r\n\r\n  public onSwipe = (e: EventData): void => {\r\n    const { isPlaying, swipesDisabled } = this.gameStore;\r\n\r\n    if (this.isSwiping || !isPlaying || this.isAnimating || swipesDisabled) return;\r\n\r\n    switch (Direction[e.dir]) {\r\n      case Direction.Left:\r\n        this.no();\r\n        break;\r\n      case Direction.Right:\r\n        this.yes();\r\n        break;\r\n      default:\r\n        break;\r\n    }\r\n    this.isSwiping = true;\r\n  };\r\n\r\n  public onSwiped = (): void => {\r\n    this.isSwiping = false;\r\n  };\r\n\r\n  private yes = (): void => this.gameStore.voteForPairs(true);\r\n  private no = (): void => this.gameStore.voteForPairs(false);\r\n  private switch = (): void => this.gameStore.switchGameMode();\r\n  private menu = (): void => this.props.history.push('');\r\n  private over = (): void => this.props.history.push('/gameOver');\r\n  private restart = (): void => this.gameStore.restart();\r\n\r\n  public render(): React.ReactNode {\r\n    const {\r\n      firstPair,\r\n      secondPair,\r\n      timer,\r\n      scoreRight,\r\n      gameLifes,\r\n      gameSize,\r\n      skinColor,\r\n      isPlaying,\r\n      lifes,\r\n    } = this.gameStore;\r\n\r\n    return (\r\n      <div className=\"App\">\r\n        <Swipeable className=\"gameField\" delta={75} onSwiping={this.onSwipe} onSwiped={(): void => this.onSwiped()}>\r\n          {/* <div className=\"blured score debug\">\r\n            {firstPair.hash}\r\n            {comparePairs ? ' = ' : ' != '}\r\n            {secondPair.hash}\r\n          </div> */}\r\n          <div className=\"topBar\" style={{ display: 'flex' }}>\r\n            <div className=\"score-holder timer\">\r\n              <div className=\"blured score\">\r\n                <button disabled={!isPlaying} className=\"thumb switch\" onClick={this.menu}>\r\n                  ⏪\r\n                </button>\r\n              </div>\r\n            </div>\r\n            <TransitionGroup className=\"score-holder scale\">\r\n              <CSSTransition key={scoreRight} timeout={500} classNames=\"scale\">\r\n                <div className=\"blured score\">{`🔥 ${scoreRight}`}</div>\r\n              </CSSTransition>\r\n            </TransitionGroup>\r\n            <TransitionGroup className=\"score-holder scale timer\">\r\n              <CSSTransition key={timer} timeout={500} classNames=\"scale\">\r\n                <div className=\"blured score\">{timer}</div>\r\n              </CSSTransition>\r\n            </TransitionGroup>\r\n            <div className=\"score-holder lifes scale\">\r\n              <div className=\"blured score\">\r\n                {Array.from({ length: gameLifes }, () => '❤️').map((heart, index) => (\r\n                  <span key={index} className=\"life\" style={{ opacity: index < lifes ? 1 : 0.1 }}>\r\n                    {heart}\r\n                  </span>\r\n                ))}\r\n              </div>\r\n            </div>\r\n            <div className=\"score-holder timer\">\r\n              <div className=\"blured score\">\r\n                <button disabled={!isPlaying} className=\"thumb switch\" onClick={this.restart}>\r\n                  🔄\r\n                </button>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div className=\"pairs blured\">\r\n            {[firstPair, secondPair].map((pair, index) => {\r\n              return (\r\n                <TransitionGroup key={`${index}`} className=\"pair-holder scale\">\r\n                  <CSSTransition\r\n                    key={pair.hash}\r\n                    timeout={500}\r\n                    classNames=\"scale\"\r\n                    unmountOnExit\r\n                    onEnter={this.startedAnimating}\r\n                    onExited={this.stopeAnimating}\r\n                  >\r\n                    <div className=\"pair\">\r\n                      {pair.pair.map(rows => {\r\n                        return (\r\n                          <div className=\"emoji-row\" key={rows.join()}>\r\n                            {rows.map(item => (\r\n                              <div key={item}>\r\n                                <Emoji gameSize={gameSize}>{item}</Emoji>\r\n                              </div>\r\n                            ))}\r\n                          </div>\r\n                        );\r\n                      })}\r\n                    </div>\r\n                  </CSSTransition>\r\n                </TransitionGroup>\r\n              );\r\n            })}\r\n          </div>\r\n          <div className=\"blured buttons\">\r\n            <button disabled={!isPlaying || this.isAnimating} className=\"thumb down\" onClick={this.yes}>\r\n              <Emoji>{`👍${skin[skinColor]}`}</Emoji>\r\n            </button>\r\n            <button disabled={!isPlaying || this.isAnimating} className=\"thumb up\" onClick={this.no}>\r\n              <Emoji>{`👎${skin[skinColor]}`}</Emoji>\r\n            </button>\r\n          </div>\r\n        </Swipeable>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Game as React.ComponentType<any>;\r\n","import React from 'react';\r\nimport './styles.scss';\r\n\r\ninterface Props {\r\n  emoji?: string;\r\n  gameSize?: number;\r\n}\r\n\r\nconst Emoji: React.FC<Props> = props => {\r\n  return <div className={`${props.gameSize === 3 ? 'three' : ''} emoji__holder`}>{props.children}</div>;\r\n};\r\n\r\nexport default Emoji;\r\n","import React from 'react';\r\nimport { Swipeable, EventData } from 'react-swipeable';\r\nimport { inject, observer } from 'mobx-react';\r\nimport { withRouter, RouteComponentProps } from 'react-router-dom';\r\nimport { CSSTransition, TransitionGroup, SwitchTransition } from 'react-transition-group';\r\n\r\nimport './styles.scss';\r\nimport '../../styles/global.scss';\r\nimport '../../styles/adaptive.scss';\r\n\r\nimport { GameStore } from '../../stores/gameStore';\r\nimport Emoji from '../../components/emoji';\r\nimport { randomInteger } from '../../helpers/math';\r\nimport { skin, emoticons } from '../../helpers/emojis';\r\n\r\ntype PropsType = RouteComponentProps<{}> & {\r\n  gameStore?: GameStore;\r\n};\r\n\r\n@(withRouter as any)\r\n@inject('gameStore')\r\n@observer\r\nclass Menu extends React.Component<PropsType> {\r\n  private gameStore: GameStore;\r\n  private emoji = this.props.gameStore.randomSadOrHappyEmoticon;\r\n\r\n  public constructor(props: PropsType) {\r\n    super(props);\r\n\r\n    this.gameStore = this.props.gameStore;\r\n  }\r\n\r\n  public componentWillMount(): void {}\r\n\r\n  public componentWillUnmount(): void {}\r\n\r\n  private start = (): void => this.props.history.push('game');\r\n  private settings = (): void => this.props.history.push('settings');\r\n  private about = (): void => this.props.history.push('about');\r\n\r\n  public render(): React.ReactNode {\r\n    return (\r\n      <div className=\"menu\">\r\n        <div className=\"logo\">{this.emoji}</div>\r\n        <div className=\"all-buttons\">\r\n          <div className=\"buttons\">\r\n            <button className=\"button play blured\" onClick={this.start}>\r\n              ▶️\r\n            </button>\r\n          </div>\r\n          <div className=\"buttons\">\r\n            <button className=\"button small blured\" onClick={this.about}>\r\n              🤔\r\n            </button>\r\n            <button className=\"button small blured\" onClick={this.settings}>\r\n              ⚙️\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Menu as React.ComponentType<any>;\r\n","import React from 'react';\r\nimport { inject, observer } from 'mobx-react';\r\nimport { withRouter, RouteComponentProps } from 'react-router-dom';\r\n\r\nimport './styles.scss';\r\nimport '../../styles/global.scss';\r\nimport '../../styles/adaptive.scss';\r\n\r\nimport { GameStore } from '../../stores/gameStore';\r\n\r\ntype PropsType = RouteComponentProps<{}> & {\r\n  gameStore?: GameStore;\r\n};\r\n\r\n@(withRouter as any)\r\n@inject('gameStore')\r\n@observer\r\nclass Settings extends React.Component<PropsType> {\r\n  private gameStore: GameStore;\r\n\r\n  public constructor(props?: PropsType) {\r\n    super(props);\r\n\r\n    this.gameStore = this.props.gameStore;\r\n  }\r\n\r\n  public componentWillMount(): void {}\r\n\r\n  public componentWillUnmount(): void {}\r\n\r\n  private start = (): void => this.props.history.push('game');\r\n  private switchGameType = (): void => this.gameStore.switchGameMode();\r\n  private switchLGBTFriendly = (): void => this.gameStore.switchLGBTFriendly();\r\n  private switchSwipesDisabled = (): void => this.gameStore.switchSwipesDisabled();\r\n  private menu = (): void => this.props.history.goBack();\r\n\r\n  public render(): React.ReactNode {\r\n    const { gameSizeEmoji, LGBTFriendly, swipesDisabled } = this.gameStore;\r\n    return (\r\n      <div className=\"settings\">\r\n        <div className=\"logo\">⚙️</div>\r\n        <div className=\"all-buttons\">\r\n          <button className=\"button small blured\" onClick={this.switchGameType}>\r\n            {gameSizeEmoji} <span className=\"setting-item-text\">Game size</span>\r\n          </button>\r\n          <button className=\"button small blured\" onClick={this.switchSwipesDisabled}>\r\n            👆{' '}\r\n            <span style={{ textDecoration: swipesDisabled ? 'line-through' : 'none' }} className=\"setting-item-text\">\r\n              Swipes\r\n            </span>\r\n          </button>\r\n          <button className=\"button small blured\" onClick={this.switchLGBTFriendly}>\r\n            🏳️‍🌈{' '}\r\n            <span style={{ textDecoration: !LGBTFriendly ? 'line-through' : 'none' }} className=\"setting-item-text\">\r\n              LGBT Friendly\r\n            </span>\r\n          </button>\r\n          <div className=\"buttons\">\r\n            <button className=\"button back blured\" onClick={this.menu}>\r\n              ⏪\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Settings;\r\n","import React from 'react';\r\nimport { Swipeable, EventData } from 'react-swipeable';\r\nimport { inject, observer } from 'mobx-react';\r\nimport { withRouter, RouteComponentProps } from 'react-router-dom';\r\nimport { CSSTransition, TransitionGroup, SwitchTransition } from 'react-transition-group';\r\n\r\nimport './styles.scss';\r\nimport '../../styles/global.scss';\r\nimport '../../styles/adaptive.scss';\r\n\r\nimport { GameStore } from '../../stores/gameStore';\r\nimport Emoji from '../../components/emoji';\r\nimport { randomInteger } from '../../helpers/math';\r\nimport { skin } from '../../helpers/emojis';\r\n\r\ntype PropsType = RouteComponentProps<{}>;\r\n\r\n@(withRouter as any)\r\n@observer\r\nclass About extends React.Component<PropsType> {\r\n  public constructor(props?: PropsType) {\r\n    super(props);\r\n  }\r\n\r\n  public componentWillMount(): void {}\r\n\r\n  public componentWillUnmount(): void {}\r\n\r\n  private start = (): void => this.props.history.push('game');\r\n  private menu = (): void => this.props.history.goBack();\r\n\r\n  public render(): React.ReactNode {\r\n    return (\r\n      <div className=\"about\">\r\n        <div className=\"logo\">🤔</div>\r\n        <div className=\"thanks blured\">\r\n          <big>FAQ:</big> Compare shuffled emoticons from top to bottom <br />\r\n          <big>Big</big> thanks to my friends for great advises and testing this little game <br />\r\n          <big className=\"heart\">❤️</big>\r\n          <big className=\"heart\">🧡</big>\r\n          <big className=\"heart\">💛</big>\r\n          <big className=\"heart\">💚</big>\r\n          <big className=\"heart\">💙</big>\r\n          <big className=\"heart\">💜</big>\r\n          <br />\r\n          I’ve made this for fun.\r\n        </div>\r\n        <div className=\"all-buttons\">\r\n          <div className=\"buttons\">\r\n            <button className=\"button back blured\" onClick={this.menu}>\r\n              ⏪\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default About;\r\n","/* eslint-disable @typescript-eslint/explicit-function-return-type */\r\nimport React from 'react';\r\nimport { Provider } from 'mobx-react';\r\nimport ReactDOM from 'react-dom';\r\nimport { Route, Switch, Redirect, HashRouter } from 'react-router-dom';\r\nimport './index.scss';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport Game from './containers/game';\r\nimport { store as gameStore } from './stores/gameStore';\r\nimport Menu from './containers/menu';\r\nimport Settings from './containers/settings';\r\nimport About from './containers/about';\r\nimport GameOver from './containers/gameOver';\r\nimport { CSSTransition } from 'react-transition-group';\r\n\r\nconst stores = {\r\n  gameStore,\r\n};\r\n\r\nconst routes = [\r\n  { path: '/about', Component: About },\r\n  { path: '/', Component: Menu },\r\n  { path: '/game', Component: Game },\r\n  { path: '/settings', Component: Settings },\r\n  { path: '/gameOver', Component: GameOver },\r\n];\r\n\r\nconst router = (\r\n  <Provider {...stores}>\r\n    <HashRouter>\r\n      {routes.map(({ path, Component }) => (\r\n        <Route key={path} exact path={path}>\r\n          {({ match }: { match: any }) => (\r\n            <CSSTransition in={match != null} timeout={300} classNames=\"page\" unmountOnExit>\r\n              <div className=\"page\">\r\n                <Component />\r\n              </div>\r\n            </CSSTransition>\r\n          )}\r\n        </Route>\r\n      ))}\r\n    </HashRouter>\r\n  </Provider>\r\n);\r\n\r\nReactDOM.render(router, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n\r\n// function listener(): void {\r\n//   switch (screen.orientation.type) {\r\n//     case 'landscape-primary':\r\n//       window.document.documentElement.requestFullscreen();\r\n//       break;\r\n//     default: {\r\n//       if (window.document.fullscreen) {\r\n//         window.document.exitFullscreen();\r\n//       }\r\n//     }\r\n//   }\r\n// }\r\n\r\n// if (window.screen && window.screen.orientation) {\r\n//   window.screen.orientation.addEventListener('change', listener, false);\r\n// }\r\n","import React from 'react';\r\nimport { inject } from 'mobx-react';\r\nimport { withRouter, RouteComponentProps } from 'react-router-dom';\r\n\r\nimport './styles.scss';\r\nimport '../../styles/global.scss';\r\nimport '../../styles/adaptive.scss';\r\n\r\nimport { GameStore } from '../../stores/gameStore';\r\nimport { numberToEmojiString } from '../../helpers/emojis';\r\n\r\ntype PropsType = RouteComponentProps<{}> & {\r\n  gameStore?: GameStore;\r\n};\r\n\r\n@(withRouter as any)\r\n@inject('gameStore')\r\nclass GameOver extends React.Component<PropsType> {\r\n  private gameStore: GameStore;\r\n  private score = 0;\r\n  private emoji = this.props.gameStore.randomSadOrHappyEmoticon;\r\n\r\n  public constructor(props: PropsType) {\r\n    super(props);\r\n\r\n    this.gameStore = this.props.gameStore;\r\n    this.score = this.gameStore.scoreRight;\r\n  }\r\n\r\n  public componentWillMount(): void {}\r\n\r\n  public componentWillUnmount(): void {}\r\n\r\n  private start = (): void => this.props.history.push('/game');\r\n  private menu = (): void => this.props.history.push('/');\r\n  private settings = (): void => this.props.history.push('/settings');\r\n\r\n  public render(): React.ReactNode {\r\n    return (\r\n      <div className=\"gameOver\">\r\n        <div className=\"logo\">{this.emoji}</div>\r\n        <button className=\"thanks\">{numberToEmojiString(this.score)}</button>\r\n        <div className=\"all-buttons\">\r\n          <div className=\"buttons\">\r\n            <button className=\"button play blured\" onClick={this.start}>\r\n              🔄\r\n            </button>\r\n          </div>\r\n          <div className=\"buttons\">\r\n            <button className=\"button small blured\" onClick={this.menu}>\r\n              🏠\r\n            </button>\r\n            <button className=\"button small blured\" onClick={this.settings}>\r\n              ⚙️\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default GameOver as React.ComponentType<any>;\r\n"],"sourceRoot":""}