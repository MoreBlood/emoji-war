{"version":3,"sources":["serviceWorker.ts","helpers/math.ts","helpers/emojis.ts","types/pair.ts","stores/gameStore.ts","components/emoji/index.tsx","containers/game/index.tsx","containers/menu/index.tsx","containers/settings/index.tsx","containers/about/index.tsx","index.tsx","containers/gameOver/index.tsx"],"names":["Boolean","window","location","hostname","match","randomInteger","min","max","includingMax","arguments","length","undefined","rand","Math","random","round","yes","emoticons","skin","colorable","GameState","Pair","pair","Object","classCallCheck","this","originalPair","shuffle","createClass","key","value","shuffled","i","u","push","sort","counter","Array","isArray","skinModifier","includes","get","hash","store","_class","GameStore","initializerDefineProperty","_descriptor","_descriptor2","_descriptor3","_descriptor4","_descriptor5","_descriptor6","_descriptor7","_descriptor8","_descriptor9","_descriptor10","_descriptor11","timerUpdater","timer","scoredWrong","generate","_this","clearInterval","setInterval","decrease","LGBTFriendly","lifes","stop","first","second","gameSize","randomEmoji","randomRow","randomColoumn","firstPair","secondPair","skinColor","time","initTimer","gameState","playing","scoreWrong","scoreRight","gameLifes","restart","gameOver","vote","comparePairs","set","navigator","vibrate","applyDecoratedDescriptor","prototype","observable","configurable","enumerable","writable","initializer","computed","getOwnPropertyDescriptor","action","Emoji","props","react_default","a","createElement","className","concat","children","Game","withRouter","inject","observer","possibleConstructorReturn","getPrototypeOf","call","gameStore","gameStateChanges","voteForPairs","no","switch","switchGameMode","menu","history","over","_this2","autorun","setTimeout","_this$gameStore","gameSizeEmoji","style","display","onClick","TransitionGroup","CSSTransition","timeout","classNames","from","map","heart","index","opacity","rows","join","item","emoji","React","Component","Menu","start","settings","about","Settings","switchGameType","switchLGBTFriendly","goBack","textDecoration","About","stores","routes","path","GameOver","score","num","array","toString","split","res","forEach","el","getNumberEmoji","numberToEmojiString","router","mobx_react_module","react_router_dom","_ref","react_router","exact","_ref2","in","unmountOnExit","ReactDOM","render","document","getElementById","serviceWorker","ready","then","registration","unregister"],"mappings":"mYAYoBA,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MAAM,uKCjB5B,SAASC,EAAcC,EAAaC,GAA2C,IAA9BC,EAA8BC,UAAAC,OAAA,QAAAC,IAAAF,UAAA,IAAAA,UAAA,GAChFG,EAAON,EAAM,GAAMO,KAAKC,WAAaN,EAAeD,EAAMA,EAAM,GAAKD,EAAM,GAC/E,OAAOO,KAAKE,MAAMH,GAGb,SAASI,IACd,OAAOH,KAAKC,SAAW,GCNlB,IAAMG,EAAY,CACvB,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,gBAGWC,EAAO,CAAC,eAAM,eAAM,eAAM,eAAM,gBAEhCC,EAAY,CACvB,eACA,eACA,eACA,SACA,eACA,eACA,eACA,SACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,SACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,SACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA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","file":"static/js/main.929f0a33.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/),\r\n);\r\n\r\ninterface Config {\r\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\r\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\r\n}\r\n\r\nfunction registerValidSW(swUrl: string, config?: Config): void {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then((registration): void => {\r\n      registration.onupdatefound = (): void => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = (): void => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.',\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch((error): void => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl: string, config?: Config): void {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then((response): void => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (response.status === 404 || (contentType != null && contentType.indexOf('javascript') === -1)) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then((registration): void => {\r\n          registration.unregister().then((): void => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch((): void => {\r\n      console.log('No internet connection found. App is running in offline mode.');\r\n    });\r\n}\r\n\r\nexport function register(config?: Config): void {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL((process as { env: { [key: string]: string } }).env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', (): void => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then((): void => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA',\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nexport function unregister(): void {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then((registration): void => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","export function randomInteger(min: number, max: number, includingMax = false): number {\r\n  let rand = min - 0.5 + Math.random() * ((includingMax ? max : max - 1) - min + 1);\r\n  return Math.round(rand);\r\n}\r\n\r\nexport function yes(): boolean {\r\n  return Math.random() > 0.5;\r\n}\r\n","export const emoticons = [\r\n  '😀',\r\n  '😁',\r\n  '😂',\r\n  '😃',\r\n  '😄',\r\n  '😅',\r\n  '😆',\r\n  '😇',\r\n  '😈',\r\n  '😉',\r\n  '😊',\r\n  '😋',\r\n  '😌',\r\n  '😍',\r\n  '😎',\r\n  '😏',\r\n  '😐',\r\n  '😑',\r\n  '😒',\r\n  '😓',\r\n  '😔',\r\n  '😕',\r\n  '😖',\r\n  '😗',\r\n  '😘',\r\n  '😙',\r\n  '😚',\r\n  '😛',\r\n  '😜',\r\n  '😝',\r\n  '😞',\r\n  '😟',\r\n  '😠',\r\n  '😡',\r\n  '😢',\r\n  '😣',\r\n  '😤',\r\n  '😥',\r\n  '😦',\r\n  '😧',\r\n  '😨',\r\n  '😩',\r\n  '😪',\r\n  '😫',\r\n  '😬',\r\n  '😭',\r\n  '😮',\r\n  '😯',\r\n  '😰',\r\n  '😱',\r\n  '😲',\r\n  '😳',\r\n  '😴',\r\n  '😵',\r\n  '😶',\r\n  '😷',\r\n  '😸',\r\n  '😹',\r\n  '😺',\r\n  '😻',\r\n  '😼',\r\n  '😽',\r\n  '😾',\r\n  '😿',\r\n  '🙀',\r\n  '🙁',\r\n  '🙂',\r\n  '🙃',\r\n  '🙄',\r\n];\r\n\r\nexport const skin = ['🏻', '🏼', '🏽', '🏾', '🏿'];\r\n\r\nexport const colorable = [\r\n  '👋',\r\n  '🤚',\r\n  '🖐',\r\n  '✋',\r\n  '🖖',\r\n  '👌',\r\n  '🤏',\r\n  '✌',\r\n  '🤞',\r\n  '🤟',\r\n  '🤘',\r\n  '🤙',\r\n  '👈',\r\n  '👉',\r\n  '👆',\r\n  '🖕',\r\n  '👇',\r\n  '👍',\r\n  '👎',\r\n  '✊',\r\n  '👊',\r\n  '🤛',\r\n  '🤜',\r\n  '👏',\r\n  '🙌',\r\n  '👐',\r\n  '🤲',\r\n  '🙏',\r\n  '✍',\r\n  '💅',\r\n  '🤝',\r\n  '🤳',\r\n  '💪',\r\n  '🦵',\r\n  '🦶',\r\n  '👂',\r\n  '🦻',\r\n  '👃',\r\n  '👶',\r\n  '🧒',\r\n  '👦',\r\n  '👧',\r\n  '🧑',\r\n  '👱',\r\n  '👨',\r\n  '🧔',\r\n  '👩',\r\n  '🧓',\r\n  '👴',\r\n  '👵',\r\n  '🙍',\r\n  '🙎',\r\n  '🙅',\r\n  '🙆',\r\n  '💁',\r\n  '🙋',\r\n  '🧏',\r\n  '🙇',\r\n  '🤦',\r\n  '🤷',\r\n  '👮',\r\n  '🕵',\r\n  '💂',\r\n  '👷',\r\n  '🤴',\r\n  '👸',\r\n  '👳',\r\n  '👲',\r\n  '🧕',\r\n  '🤵',\r\n  '👰',\r\n  '🤰',\r\n  '🤱',\r\n  '👼',\r\n  '🎅',\r\n  '🤶',\r\n  '🦸',\r\n  '🦹',\r\n  '🧙',\r\n  '🧚',\r\n  '🧛',\r\n  '🧜',\r\n  '🧝',\r\n  '💆',\r\n  '💇',\r\n  '🚶',\r\n  '🧍',\r\n  '🧎',\r\n  '🏃',\r\n  '💃',\r\n  '🕺',\r\n  '🕴',\r\n  '👯',\r\n  '🧖',\r\n  '🧗',\r\n  '🏇',\r\n  '🏂',\r\n  '🏌',\r\n  '🏄',\r\n  '🚣',\r\n  '🏊',\r\n  '⛹',\r\n  '🏋',\r\n  '🚴',\r\n  '🚵',\r\n  '🤸',\r\n  '🤽',\r\n  '🤾',\r\n  '🤹',\r\n  '🧘',\r\n  '👭',\r\n  '👫',\r\n  '👬',\r\n  '💏',\r\n  '💑',\r\n  '👪',\r\n  '🤼',\r\n];\r\n\r\nfunction getNumberEmoji(num: number): string {\r\n  switch (num) {\r\n    case 1:\r\n      return '1️⃣';\r\n      break;\r\n    case 2:\r\n      return '2️⃣';\r\n      break;\r\n    case 3:\r\n      return '3️⃣';\r\n      break;\r\n    case 4:\r\n      return '4️⃣';\r\n      break;\r\n    case 5:\r\n      return '5️⃣';\r\n      break;\r\n    case 6:\r\n      return '6️⃣';\r\n      break;\r\n    case 7:\r\n      return '7️⃣';\r\n      break;\r\n    case 8:\r\n      return '8️⃣';\r\n      break;\r\n    case 9:\r\n      return '9️⃣';\r\n      break;\r\n    case 0:\r\n      return '0️⃣';\r\n      break;\r\n    default:\r\n      return '';\r\n  }\r\n}\r\n\r\nexport function numberToEmojiString(num: number): string[] {\r\n  const array = num.toString().split('');\r\n  const res: string[] = [];\r\n\r\n  array.forEach(el => {\r\n    res.push(getNumberEmoji(+el));\r\n  });\r\n\r\n  return res;\r\n}\r\n","import { skin, colorable } from '../helpers/emojis';\r\nimport { randomInteger } from '../helpers/math';\r\n\r\nexport class Pair {\r\n  private originalPair: string[][] = [];\r\n  public pair: string[][] = [];\r\n\r\n  public constructor(pair: string[][] = []) {\r\n    this.originalPair = pair;\r\n    this.shuffle();\r\n  }\r\n\r\n  public get hash(): string {\r\n    let hash = '';\r\n\r\n    for (let i = 0; i < this.originalPair.length; i += 1) {\r\n      for (let u = 0; u < this.originalPair[i].length; u += 1) {\r\n        hash += this.originalPair[i][u];\r\n      }\r\n    }\r\n\r\n    return hash;\r\n  }\r\n\r\n  private shuffle(): void {\r\n    const shuffled = [];\r\n    for (let i = 0; i < this.originalPair.length; i += 1) {\r\n      for (let u = 0; u < this.originalPair[i].length; u += 1) {\r\n        shuffled.push(this.originalPair[i][u]);\r\n      }\r\n    }\r\n\r\n    shuffled.sort(() => Math.random() - 0.5);\r\n    let counter = 0;\r\n\r\n    for (let i = 0; i < this.originalPair.length; i += 1) {\r\n      if (!Array.isArray(this.pair[i])) {\r\n        this.pair[i] = [];\r\n      }\r\n      for (let u = 0; u < this.originalPair[i].length; u += 1) {\r\n        const skinModifier = colorable.includes(shuffled[counter]) ? skin[randomInteger(0, skin.length)] : '';\r\n        this.pair[i][u] = shuffled[counter] + skinModifier;\r\n        counter += 1;\r\n      }\r\n    }\r\n  }\r\n}\r\n","import { observable, action, computed, toJS } from 'mobx';\r\nimport { randomInteger, yes } from '../helpers/math';\r\nimport { emoticons, skin, colorable } from '../helpers/emojis';\r\nimport { Pair } from '../types/pair';\r\n\r\nexport enum GameState {\r\n  gameOver,\r\n  pause,\r\n  playing,\r\n}\r\n\r\nexport class GameStore {\r\n  @observable\r\n  public gameSize = 2;\r\n\r\n  @observable\r\n  public gameState: GameState = GameState.playing;\r\n\r\n  @observable\r\n  public gameLifes = 3;\r\n\r\n  @computed\r\n  private get time(): number {\r\n    return 3 * this.gameSize;\r\n  }\r\n\r\n  @observable\r\n  public lifes: number = this.gameLifes;\r\n\r\n  @observable\r\n  public LGBTFriendly = true;\r\n\r\n  @computed\r\n  public get gameSizeEmoji(): string {\r\n    switch (this.gameSize) {\r\n      case 2:\r\n        return '2️⃣';\r\n      case 3:\r\n        return '3️⃣';\r\n      default:\r\n        return '';\r\n    }\r\n  }\r\n\r\n  @observable\r\n  public firstPair: Pair = new Pair();\r\n\r\n  @observable\r\n  public secondPair: Pair = new Pair();\r\n\r\n  @observable\r\n  public scoreRight: number = 0;\r\n\r\n  @observable\r\n  public scoreWrong: number = 0;\r\n\r\n  @observable\r\n  public timer: number = this.time;\r\n\r\n  @observable\r\n  public skinColor: number = 0;\r\n\r\n  private timerUpdater: NodeJS.Timeout = null;\r\n\r\n  @action\r\n  private decrease(): void {\r\n    this.timer -= 1;\r\n    if (this.timer < 0) {\r\n      this.scoredWrong = 1;\r\n      this.generate();\r\n    }\r\n  }\r\n\r\n  private initTimer(): void {\r\n    if (this.timerUpdater) {\r\n      clearInterval(this.timerUpdater);\r\n    }\r\n    this.timerUpdater = setInterval(() => this.decrease(), 1000);\r\n  }\r\n\r\n  public switchLGBTFriendly(): void {\r\n    this.LGBTFriendly = !this.LGBTFriendly;\r\n  }\r\n\r\n  @action\r\n  private generate(): void {\r\n    if (this.lifes === 0) {\r\n      return this.stop();\r\n    }\r\n    const first: string[][] = [];\r\n    const second: string[][] = [];\r\n    for (let i = 0; i < this.gameSize; i += 1) {\r\n      if (!Array.isArray(first[i])) {\r\n        first[i] = [];\r\n        second[i] = [];\r\n      }\r\n      for (let u = 0; u < this.gameSize; u += 1) {\r\n        first[i][u] = GameStore.randomEmoji();\r\n        second[i][u] = first[i][u];\r\n      }\r\n    }\r\n\r\n    if (yes()) {\r\n      const randomRow = randomInteger(0, this.gameSize);\r\n      const randomColoumn = randomInteger(0, this.gameSize);\r\n\r\n      second[randomRow][randomColoumn] = GameStore.randomEmoji();\r\n    }\r\n\r\n    this.firstPair = new Pair(first);\r\n    this.secondPair = new Pair(second);\r\n    this.skinColor = randomInteger(0, skin.length);\r\n    this.timer = this.time;\r\n    this.initTimer();\r\n    this.gameState = GameState.playing;\r\n  }\r\n\r\n  public restart(): void {\r\n    this.scoreWrong = 0;\r\n    this.scoreRight = 0;\r\n    this.lifes = this.gameLifes;\r\n    this.generate();\r\n  }\r\n\r\n  public switchGameMode(): void {\r\n    if (this.gameSize === 2) {\r\n      this.gameSize = 3;\r\n    } else {\r\n      this.gameSize = 2;\r\n    }\r\n    this.restart();\r\n  }\r\n\r\n  private stop(): void {\r\n    if (this.timerUpdater) {\r\n      clearInterval(this.timerUpdater);\r\n      this.timer = 0;\r\n    }\r\n    this.gameState = GameState.gameOver;\r\n  }\r\n\r\n  public static randomEmoji(): string {\r\n    if (yes()) {\r\n      return colorable[randomInteger(0, colorable.length)];\r\n    } else {\r\n      return emoticons[randomInteger(0, emoticons.length)];\r\n    }\r\n  }\r\n\r\n  private set scoredWrong(value: number) {\r\n    if (window.navigator && window.navigator.vibrate) {\r\n      window.navigator.vibrate(200);\r\n    }\r\n\r\n    if (this.lifes > 0) {\r\n      this.lifes -= value;\r\n    }\r\n  }\r\n\r\n  @action\r\n  public voteForPairs(vote: boolean): void {\r\n    if (this.comparePairs === vote) {\r\n      this.scoreRight += this.gameSize;\r\n    } else {\r\n      this.scoredWrong = 1;\r\n    }\r\n    this.generate();\r\n  }\r\n\r\n  @computed\r\n  public get comparePairs(): boolean {\r\n    return this.firstPair.hash === this.secondPair.hash;\r\n  }\r\n}\r\n\r\nexport const store = new GameStore();\r\n","import React from 'react';\r\nimport './styles.scss';\r\n\r\ninterface Props {\r\n  emoji?: string;\r\n  gameSize?: number;\r\n}\r\n\r\nconst Emoji: React.FC<Props> = props => {\r\n  return <div className={`${props.gameSize === 3 ? 'three' : ''} emoji__holder`}>{props.children}</div>;\r\n};\r\n\r\nexport default Emoji;\r\n","import React from 'react';\r\nimport { Swipeable, EventData } from 'react-swipeable';\r\nimport { inject, observer } from 'mobx-react';\r\nimport { withRouter, RouteComponentProps } from 'react-router-dom';\r\nimport { CSSTransition, TransitionGroup, SwitchTransition } from 'react-transition-group';\r\n\r\nimport './styles.scss';\r\nimport '../../styles/global.scss';\r\nimport '../../styles/adaptive.scss';\r\n\r\nimport { GameStore, GameState } from '../../stores/gameStore';\r\nimport Emoji from '../../components/emoji';\r\nimport { randomInteger } from '../../helpers/math';\r\nimport { skin } from '../../helpers/emojis';\r\nimport { autorun, IReactionDisposer } from 'mobx';\r\n\r\ntype PropsType = RouteComponentProps<{}> & {\r\n  gameStore?: GameStore;\r\n};\r\n\r\n@(withRouter as any)\r\n@inject('gameStore')\r\n@observer\r\nclass Game extends React.Component<PropsType, null> {\r\n  private gameStore: GameStore;\r\n  private gameStateChanges: IReactionDisposer;\r\n\r\n  public constructor(props: PropsType) {\r\n    super(props);\r\n\r\n    this.gameStore = this.props.gameStore;\r\n  }\r\n\r\n  public componentWillMount(): void {\r\n    this.gameStore.restart();\r\n\r\n    this.gameStateChanges = autorun(() => {\r\n      const { gameState } = this.gameStore;\r\n      switch (gameState) {\r\n        case GameState.gameOver:\r\n          setTimeout(() => this.over(), 1000);\r\n          break;\r\n        default:\r\n          break;\r\n      }\r\n    });\r\n  }\r\n\r\n  public componentWillUnmount(): void {\r\n    this.gameStateChanges();\r\n  }\r\n\r\n  private yes = (): void => this.gameStore.voteForPairs(true);\r\n  private no = (): void => this.gameStore.voteForPairs(false);\r\n  private switch = (): void => this.gameStore.switchGameMode();\r\n  private menu = (): void => this.props.history.push('');\r\n  private over = (): void => this.props.history.push('/gameOver');\r\n  private restart = (): void => this.gameStore.restart();\r\n\r\n  public render(): React.ReactNode {\r\n    const {\r\n      firstPair,\r\n      secondPair,\r\n      timer,\r\n      scoreRight,\r\n      scoreWrong,\r\n      gameSizeEmoji,\r\n      gameLifes,\r\n      gameSize,\r\n      skinColor,\r\n      lifes,\r\n    } = this.gameStore;\r\n    return (\r\n      <div className=\"App\">\r\n        <div className=\"gameField\">\r\n          {/* <div className=\"blured score debug\">\r\n            {firstPair.hash}\r\n            {comparePairs ? ' = ' : ' != '}\r\n            {secondPair.hash}\r\n          </div> */}\r\n          <div className=\"topBar\" style={{ display: 'flex' }}>\r\n            <div className=\"score-holder timer\">\r\n              <div className=\"blured score\">\r\n                <button className=\"thumb switch\" onClick={this.menu}>\r\n                  ⏪\r\n                </button>\r\n              </div>\r\n            </div>\r\n            <TransitionGroup className=\"score-holder scale\">\r\n              <CSSTransition key={scoreRight} timeout={500} classNames=\"scale\">\r\n                <div className=\"blured score\">{`🔥 ${scoreRight}`}</div>\r\n              </CSSTransition>\r\n            </TransitionGroup>\r\n            <TransitionGroup className=\"score-holder scale timer\">\r\n              <CSSTransition key={timer} timeout={500} classNames=\"scale\">\r\n                <div className=\"blured score\">{timer}</div>\r\n              </CSSTransition>\r\n            </TransitionGroup>\r\n            <TransitionGroup className=\"score-holder lifes scale\">\r\n              <CSSTransition key={lifes} timeout={500} classNames=\"scale\">\r\n                <div className=\"blured score\">\r\n                  {Array.from({ length: gameLifes }, () => '❤️').map((heart, index) => (\r\n                    <span key={index} style={{ opacity: index < lifes ? 1 : 0.1 }}>\r\n                      {heart}\r\n                    </span>\r\n                  ))}\r\n                </div>\r\n              </CSSTransition>\r\n            </TransitionGroup>\r\n            <div className=\"score-holder timer\">\r\n              <div className=\"blured score\">\r\n                <button className=\"thumb switch\" onClick={this.restart}>\r\n                  🔄\r\n                </button>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div className=\"pairs blured\">\r\n            {[firstPair, secondPair].map((pair, index) => {\r\n              return (\r\n                <TransitionGroup key={`${index}`} className=\"pair-holder scale\">\r\n                  <CSSTransition key={pair.hash} timeout={500} classNames=\"scale\">\r\n                    <div className=\"pair\">\r\n                      {pair.pair.map(rows => {\r\n                        return (\r\n                          <div className=\"emoji-row\" key={rows.join()}>\r\n                            {rows.map(item => (\r\n                              <div key={item}>\r\n                                <Emoji gameSize={gameSize}>{item}</Emoji>\r\n                              </div>\r\n                            ))}\r\n                          </div>\r\n                        );\r\n                      })}\r\n                    </div>\r\n                  </CSSTransition>\r\n                </TransitionGroup>\r\n              );\r\n            })}\r\n          </div>\r\n          <div className=\"blured buttons\">\r\n            <button className=\"thumb down\" onClick={this.yes}>\r\n              <Emoji>{`👍${skin[skinColor]}`}</Emoji>\r\n            </button>\r\n            <button className=\"thumb up\" onClick={this.no}>\r\n              <Emoji>{`👎${skin[skinColor]}`}</Emoji>\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Game as React.ComponentType<any>;\r\n","import React from 'react';\r\nimport { Swipeable, EventData } from 'react-swipeable';\r\nimport { inject, observer } from 'mobx-react';\r\nimport { withRouter, RouteComponentProps } from 'react-router-dom';\r\nimport { CSSTransition, TransitionGroup, SwitchTransition } from 'react-transition-group';\r\n\r\nimport './styles.scss';\r\nimport '../../styles/global.scss';\r\nimport '../../styles/adaptive.scss';\r\n\r\nimport play from './images/play-emoji.png';\r\nimport logo from './images/logo.png';\r\nimport logoSad from './images/logo-sad.png';\r\n\r\nimport { GameStore } from '../../stores/gameStore';\r\nimport Emoji from '../../components/emoji';\r\nimport { randomInteger } from '../../helpers/math';\r\nimport { skin } from '../../helpers/emojis';\r\n\r\ntype PropsType = RouteComponentProps<{}> & {\r\n  gameStore?: GameStore;\r\n};\r\n\r\n@(withRouter as any)\r\n@inject('gameStore')\r\n@observer\r\nclass Menu extends React.Component<PropsType> {\r\n  private gameStore: GameStore;\r\n\r\n  public constructor(props: PropsType) {\r\n    super(props);\r\n\r\n    this.gameStore = this.props.gameStore;\r\n  }\r\n\r\n  public componentWillMount(): void {}\r\n\r\n  public componentWillUnmount(): void {}\r\n\r\n  private start = (): void => this.props.history.push('game');\r\n  private settings = (): void => this.props.history.push('settings');\r\n  private about = (): void => this.props.history.push('about');\r\n\r\n  public render(): React.ReactNode {\r\n    const { LGBTFriendly } = this.gameStore;\r\n    return (\r\n      <div className=\"menu\">\r\n        <div className=\"logo\">{LGBTFriendly ? '😃' : '😔'}</div>\r\n        <div className=\"all-buttons\">\r\n          <div className=\"buttons\">\r\n            <button className=\"button play blured\" onClick={this.start}>\r\n              ▶️\r\n            </button>\r\n          </div>\r\n          <div className=\"buttons\">\r\n            <button className=\"button small blured\" onClick={this.about}>\r\n              🤔\r\n            </button>\r\n            <button className=\"button small blured\" onClick={this.settings}>\r\n              ⚙️\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Menu as React.ComponentType<any>;\r\n","import React from 'react';\r\nimport { inject, observer } from 'mobx-react';\r\nimport { withRouter, RouteComponentProps } from 'react-router-dom';\r\n\r\nimport './styles.scss';\r\nimport '../../styles/global.scss';\r\nimport '../../styles/adaptive.scss';\r\n\r\nimport { GameStore } from '../../stores/gameStore';\r\n\r\ntype PropsType = RouteComponentProps<{}> & {\r\n  gameStore?: GameStore;\r\n};\r\n\r\n@(withRouter as any)\r\n@inject('gameStore')\r\n@observer\r\nclass Settings extends React.Component<PropsType> {\r\n  private gameStore: GameStore;\r\n\r\n  public constructor(props?: PropsType) {\r\n    super(props);\r\n\r\n    this.gameStore = this.props.gameStore;\r\n  }\r\n\r\n  public componentWillMount(): void {}\r\n\r\n  public componentWillUnmount(): void {}\r\n\r\n  private start = (): void => this.props.history.push('game');\r\n  private switchGameType = (): void => this.gameStore.switchGameMode();\r\n  private switchLGBTFriendly = (): void => this.gameStore.switchLGBTFriendly();\r\n  private menu = (): void => this.props.history.goBack();\r\n\r\n  public render(): React.ReactNode {\r\n    const { gameSizeEmoji, LGBTFriendly } = this.gameStore;\r\n    return (\r\n      <div className=\"settings\">\r\n        <div className=\"logo\">⚙️</div>\r\n        <div className=\"all-buttons\">\r\n          <button className=\"button small blured\" onClick={this.switchGameType}>\r\n            {gameSizeEmoji} <span className=\"setting-item-text\">Game size</span>\r\n          </button>\r\n          <button className=\"button small blured\" onClick={this.switchLGBTFriendly}>\r\n            🏳️‍🌈{' '}\r\n            <span style={{ textDecoration: !LGBTFriendly ? 'line-through' : 'none' }} className=\"setting-item-text\">\r\n              LGBT Friendly\r\n            </span>\r\n          </button>\r\n          <div className=\"buttons\">\r\n            <button className=\"button back blured\" onClick={this.menu}>\r\n              ⏪\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Settings;\r\n","import React from 'react';\r\nimport { Swipeable, EventData } from 'react-swipeable';\r\nimport { inject, observer } from 'mobx-react';\r\nimport { withRouter, RouteComponentProps } from 'react-router-dom';\r\nimport { CSSTransition, TransitionGroup, SwitchTransition } from 'react-transition-group';\r\n\r\nimport './styles.scss';\r\nimport '../../styles/global.scss';\r\nimport '../../styles/adaptive.scss';\r\n\r\nimport { GameStore } from '../../stores/gameStore';\r\nimport Emoji from '../../components/emoji';\r\nimport { randomInteger } from '../../helpers/math';\r\nimport { skin } from '../../helpers/emojis';\r\n\r\ntype PropsType = RouteComponentProps<{}>;\r\n\r\n@(withRouter as any)\r\n@observer\r\nclass About extends React.Component<PropsType> {\r\n  public constructor(props?: PropsType) {\r\n    super(props);\r\n  }\r\n\r\n  public componentWillMount(): void {}\r\n\r\n  public componentWillUnmount(): void {}\r\n\r\n  private start = (): void => this.props.history.push('game');\r\n  private menu = (): void => this.props.history.goBack();\r\n\r\n  public render(): React.ReactNode {\r\n    return (\r\n      <div className=\"about\">\r\n        <div className=\"logo\">🤔</div>\r\n        <div className=\"thanks blured\">\r\n          I’ve made this for fun. <br />\r\n          <big>Big</big> thanks for my friends for greate advises and testing this little game <br />\r\n          <big className=\"heart\">❤️</big>\r\n        </div>\r\n        <div className=\"all-buttons\">\r\n          <div className=\"buttons\">\r\n            <button className=\"button back blured\" onClick={this.menu}>\r\n              ⏪\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default About;\r\n","/* eslint-disable @typescript-eslint/explicit-function-return-type */\r\nimport React from 'react';\r\nimport { Provider } from 'mobx-react';\r\nimport ReactDOM from 'react-dom';\r\nimport { Route, Switch, Redirect, HashRouter } from 'react-router-dom';\r\nimport './index.css';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport Game from './containers/game';\r\nimport { store as gameStore } from './stores/gameStore';\r\nimport Menu from './containers/menu';\r\nimport Settings from './containers/settings';\r\nimport About from './containers/about';\r\nimport GameOver from './containers/gameOver';\r\nimport { CSSTransition } from 'react-transition-group';\r\n\r\nconst stores = {\r\n  gameStore,\r\n};\r\n\r\nconst routes = [\r\n  { path: '/about', Component: About },\r\n  { path: '/', Component: Menu },\r\n  { path: '/game', Component: Game },\r\n  { path: '/settings', Component: Settings },\r\n  { path: '/gameOver', Component: GameOver },\r\n];\r\n\r\nconst router = (\r\n  <Provider {...stores}>\r\n    <HashRouter>\r\n      {routes.map(({ path, Component }) => (\r\n        <Route key={path} exact path={path}>\r\n          {({ match }: { match: any }) => (\r\n            <CSSTransition in={match != null} timeout={300} classNames=\"page\" unmountOnExit>\r\n              <div className=\"page\">\r\n                <Component />\r\n              </div>\r\n            </CSSTransition>\r\n          )}\r\n        </Route>\r\n      ))}\r\n    </HashRouter>\r\n  </Provider>\r\n);\r\n\r\nReactDOM.render(router, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n\r\n// function listener(): void {\r\n//   switch (screen.orientation.type) {\r\n//     case 'landscape-primary':\r\n//       window.document.documentElement.requestFullscreen();\r\n//       break;\r\n//     default: {\r\n//       if (window.document.fullscreen) {\r\n//         window.document.exitFullscreen();\r\n//       }\r\n//     }\r\n//   }\r\n// }\r\n\r\n// if (window.screen && window.screen.orientation) {\r\n//   window.screen.orientation.addEventListener('change', listener, false);\r\n// }\r\n","import React from 'react';\r\nimport { Swipeable, EventData } from 'react-swipeable';\r\nimport { inject, observer } from 'mobx-react';\r\nimport { withRouter, RouteComponentProps } from 'react-router-dom';\r\nimport { CSSTransition, TransitionGroup, SwitchTransition } from 'react-transition-group';\r\n\r\nimport './styles.scss';\r\nimport '../../styles/global.scss';\r\nimport '../../styles/adaptive.scss';\r\n\r\nimport { GameStore } from '../../stores/gameStore';\r\nimport Emoji from '../../components/emoji';\r\nimport { randomInteger } from '../../helpers/math';\r\nimport { skin, numberToEmojiString } from '../../helpers/emojis';\r\n\r\ntype PropsType = RouteComponentProps<{}> & {\r\n  gameStore?: GameStore;\r\n};\r\n\r\n@(withRouter as any)\r\n@inject('gameStore')\r\nclass GameOver extends React.Component<PropsType> {\r\n  private gameStore: GameStore;\r\n  private score = 0;\r\n\r\n  public constructor(props: PropsType) {\r\n    super(props);\r\n\r\n    this.gameStore = this.props.gameStore;\r\n    this.score = this.gameStore.scoreRight;\r\n  }\r\n\r\n  public componentWillMount(): void {}\r\n\r\n  public componentWillUnmount(): void {}\r\n\r\n  private start = (): void => this.props.history.push('/game');\r\n  private menu = (): void => this.props.history.push('/');\r\n  private settings = (): void => this.props.history.push('/settings');\r\n\r\n  public render(): React.ReactNode {\r\n    return (\r\n      <div className=\"gameOver\">\r\n        <div className=\"logo\">🌶️</div>\r\n        <button className=\"thanks blured\">{numberToEmojiString(this.score)}</button>\r\n        <div className=\"all-buttons\">\r\n          <div className=\"buttons\">\r\n            <button className=\"button play blured\" onClick={this.start}>\r\n              🔄\r\n            </button>\r\n          </div>\r\n          <div className=\"buttons\">\r\n            <button className=\"button small blured\" onClick={this.menu}>\r\n              🏠\r\n            </button>\r\n            <button className=\"button small blured\" onClick={this.settings}>\r\n              ⚙️\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default GameOver as React.ComponentType<any>;\r\n"],"sourceRoot":""}